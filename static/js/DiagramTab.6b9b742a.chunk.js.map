{"version":3,"file":"static/js/DiagramTab.6b9b742a.chunk.js","mappings":"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","sources":["components/DiagramTab/NewSelectButton/CustomSelect.styled.jsx","stylesheet/IconSVG.jsx","components/DiagramTab/NewSelectButton/CustomSelect.jsx","components/DiagramTab/DiagramTab.styled.jsx","helpers/colorizedCategory.js","components/DiagramTab/DiagramTab.jsx","components/DiagramTab/index.js"],"sourcesContent":["import styled from \"styled-components\";\nimport '../../../stylesheet/fonts.css';\n\n\nexport const SelectWrapper = styled.div`\n    margin-bottom: 20px;\n    position: relative;\n\n    //border: 1px solid red;\n\n    &:hover {\n        fill: var(--active-blue);\n    }\n\n    \n\n`;\nexport const SelectBtn = styled.button`\n    width: 100%;\n    height: 100%;\n    border: 1px solid var(--black);\n    border-radius: 30px;\n    padding: 12px 21px 14px 20px;\n\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-family: var(--baseFont);\n    font-style: normal;\n    font-weight: var(--regular);\n    font-size: 16px;\n    line-height: 1.47;\n    background: none;\n    cursor: pointer;\n    outline: none;\n\n    & svg {\n        ${props => props.status === true ? `transform: rotateX(180deg);` : `transform: rotateX(0);`}\n        transition: transform 500ms ease;\n    }\n`;\n\nexport const SelectOptionsList = styled.ul`\n    width: 100%;\n    position: absolute;\n    top: 60px;\n    left: 0;\n    z-index: 1;\n    background-color: #f1f2f7;\n\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    border-radius: 20px;\n    \n`;\nexport const SelectOptionsItem = styled.li`\n    text-align: start;\n    font-family: var(--baseFont);\n    font-style: normal;\n    font-weight: var(--regular);\n    font-size: 16px;\n    line-height: 1.47;\n    cursor: pointer;\n    padding: 5px 21px 5px 20px;\n    border-radius: 10px;\n\n    &:hover {\n        background-color: var(--background-gray);\n    }\n\n`;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const IconSVG = ({id}) => {\n    switch(id) {\n        case 'icon-diagram-tab-arrow-down':\n        return (\n            <svg id=\"icon-diagram-tab-arrow-down\" viewBox=\"0 0 58 32\" width=\"18\" height=\"9\">\n                <path d=\"M3.938 1.881l-2.057 2.057 27.21 27.21 27.21-27.21-2.057-2.057-25.153 25.153z\"></path>\n            </svg>\n        )\n        default:\n        return <svg></svg>\n    }\n}\n\nIconSVG.propTypes = {\n    id: PropTypes.string.isRequired,\n}","import { SelectWrapper, SelectBtn, SelectOptionsList, SelectOptionsItem, } from  './CustomSelect.styled'\nimport { useState, useEffect, useRef } from 'react'\nimport { IconSVG } from 'stylesheet/IconSVG';\n\n\nexport const CustomSelect = ({items, changeValue}) => {\n\n    const [selectedText, setSelectedTex] = useState(items.tittle)\n    const [openStatus, setOpenStatus] = useState(false);\n    const refToggleDropDown = useRef(null)\n    function onSelectClick () {\n        setOpenStatus(!openStatus);  \n    }\n\n    function onSelectChange (event) {\n\n        if (event.target.nodeName !== \"LI\") {\n            return\n        }\n        \n        const itemName = event.target.innerText;\n        const itemValue = event.target.dataset.itemvalue\n\n        setSelectedTex(itemName);\n        changeValue(itemValue);\n        setOpenStatus(!openStatus);\n\n    }\n    function handleOutsideDropDown (event) {\n\n            if (openStatus === true) {\n                \n                if (refToggleDropDown.current) {\n                    if(!refToggleDropDown.current.contains(event.target)) {\n                        setOpenStatus(false)\n                    }\n                }\n            }\n    }\n\n    useEffect(() => {\n        window.addEventListener('click', handleOutsideDropDown);\n        return () => {\n            window.removeEventListener('click', handleOutsideDropDown);\n        }\n    }); \n    return (\n        <SelectWrapper className='select__wrapper'>\n            <SelectBtn className='select__button' ref={refToggleDropDown}  onClick={onSelectClick} status={openStatus}>\n                <span className='select__button__active-text'>{selectedText}</span>\n                <IconSVG id=\"icon-diagram-tab-arrow-down\"/>\n            </SelectBtn>\n\n            {openStatus === true && <SelectOptionsList className='select__options-wrapper options' onClick={event => {\n                onSelectChange(event)\n            }}>\n                {items && items.data.map(({text, value}) => {\n                    return (\n                        <SelectOptionsItem key={text} className='options__item' data-itemvalue={value}>{text}</SelectOptionsItem>\n                    )\n                })}\n            </SelectOptionsList>}\n        </SelectWrapper>\n    )\n}\n","import styled from 'styled-components';\nimport '../../stylesheet/fonts.css';\n\nexport const DiagramTabWrapper = styled.div`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n`;\nexport const DiagramButtonsWrapper = styled.div``;\n\nexport const DiagramTableBar = styled.div`\n  @media screen and (min-width: 320px) {\n    width: 280px;\n    margin-top: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    //margin-top: 11px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    margin-top: 56px;\n  }\n`;\n\nexport const StatisticsContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;","export const colorizedCategory = (category) => {\n\n    const categoryColorsData = [\n      {\n        categoryColor: '#FF7DDB',\n        categoryName: 'Main',\n      },\n      {\n        categoryColor: '#FF6E41',\n        categoryName: 'House',\n      },\n      {\n        categoryColor: '#F422FF',\n        categoryName: 'Children',\n      },\n      {\n        categoryColor: '#FF1EA1',\n        categoryName: 'Development',\n      },\n      {\n        categoryColor: '#BE6C31',\n        categoryName: 'Auto',\n      },\n      {\n        categoryColor: '#75D7B4',\n        categoryName: 'Food',\n      },\n      {\n        categoryColor: '#FED057',\n        categoryName: 'Basic expenses',\n      },\n      {\n        categoryColor: '#FFD8D0',\n        categoryName: 'Products',\n      },\n      {\n        categoryColor: '#FD9498',\n        categoryName: 'Car',\n      },\n      {\n        categoryColor: '#C5BAFF',\n        categoryName: 'Self care',\n      },\n      {\n        categoryColor: '#6E78E8',\n        categoryName: 'Child care',\n      },\n      {\n        categoryColor: '#4A56E2',\n        categoryName: 'Household products',\n      },\n      {\n        categoryColor: '#81E1FF',\n        categoryName: 'Education',\n      },\n      {\n        categoryColor: '#24CCA7',\n        categoryName: 'Leisure',\n      },\n      {\n        categoryColor: '#00AD84',\n        categoryName: 'Other expenses',\n      }\n    ]\n    const findedItem = categoryColorsData.find(item => item.categoryName === category);\n    const randomColor = \"#\" + Math.floor(Math.random()*16777215).toString(16);\n    return findedItem !== undefined ? findedItem.categoryColor : randomColor;\n  }","import { lazy, useState, useEffect } from 'react';\nimport { useGetAllCategoriesQuery } from '../../redux/categoriesOperation';\n// import { useTranslation } from 'react-i18next';\n\nimport { CustomSelect } from 'components/DiagramTab/NewSelectButton/CustomSelect';\nimport {\n  DiagramTabWrapper,\n  DiagramTableBar,\n  DiagramButtonsWrapper,\n  StatisticsContainer,\n} from './DiagramTab.styled';\nimport { colorizedCategory } from 'helpers/colorizedCategory';\n\nconst Table = lazy(() => import('../Table' /* webpackChunkName: \"Table\" */));\nconst Chart = lazy(() => import('../Chart' /* webpackChunkName: \"Chart\" */));\n\nexport const DiagramTab = () => {\n  const { data: reduxData } = useGetAllCategoriesQuery();\n\n  // const { t } = useTranslation();\n  const [tableCategories, setTableCategories] = useState('');\n  const [tableIncomeSum, setTableIncomeSum] = useState(0);\n  const [tableExpenseSum, setTableExpenseSum] = useState(0);\n\n  const [monthSelectedValue, setMonthSelectedValue] = useState(null);\n  const [yearSelectedValue, setYearSelectedValue] = useState(null);\n\n  const monthDataSet = {\n    tittle: 'Month',\n    data: [\n      { text: 'January', value: 1 },\n      { text: 'February', value: 2 },\n      { text: 'March', value: 3 },\n      { text: 'April', value: 4 },\n      { text: 'May', value: 5 },\n      { text: 'June', value: 6 },\n      { text: 'July', value: 7 },\n      { text: 'August', value: 8 },\n      { text: 'September', value: 9 },\n      { text: 'October', value: 10 },\n      { text: 'November', value: 11 },\n      { text: 'December', value: 12 },\n    ],\n  };\n\n  const yearDataSet = {\n    tittle: 'Year',\n    data: [\n      { text: '2019', value: 2019 },\n      { text: '2020', value: 2020 },\n      { text: '2021', value: 2021 },\n      { text: '2022', value: 2022 },\n    ],\n  };\n  function incomeExpenseFilter(type, data) {\n    switch (type) {\n      case 'income':\n        return data.filter(item => item && item._id.type === 'income');\n\n      case 'expense':\n        return data.filter(item => item && item._id.type === 'expense');\n\n      default:\n        console.log('incorrect type of operation');\n    }\n  }\n  function onDateFilter(date, data) {\n    const { month, year } = date;\n\n    if (month === null && year === null) {\n      const result = data;\n      return result;\n    }\n\n    if (month !== null && year === null) {\n      const result = data.filter(item => item._id.month === Number(month));\n      return result;\n    }\n\n    if (month === null && year !== null) {\n      const result = data.filter(item => item._id.year === Number(year));\n      return result;\n    }\n\n    if (month !== null && year !== null) {\n      const result = data.filter(\n        item =>\n          item._id.month === Number(month) && item._id.year === Number(year)\n      );\n      return result;\n    }\n\n    console.log('incorrect arguments');\n  }\n\n  useEffect(() => {\n    function sumTheSameCategories(data) {\n      let sumaryData = [];\n\n      for (let item of data) {\n        if (sumaryData.length === 0) {\n          sumaryData = [\n            {\n              categoryName: item.category,\n              categorySum: item.sum,\n              categoryColor: colorizedCategory(item.category),\n            },\n          ];\n        } else {\n          const exisingItemOnsumaryData = sumaryData.find(\n            element => element.categoryName === item.category\n          );\n\n          if (exisingItemOnsumaryData !== undefined) {\n            exisingItemOnsumaryData.categorySum += item.sum;\n          } else {\n            sumaryData = [\n              ...sumaryData,\n              {\n                categoryName: item.category,\n                categorySum: item.sum,\n                categoryColor: colorizedCategory(item.category),\n              },\n            ];\n          }\n        }\n      }\n\n      return sumaryData;\n    }\n\n    if (reduxData === undefined) {\n      return;\n    }\n    if (tableCategories !== '') {\n      return;\n    }\n\n    const expenseCategiries = incomeExpenseFilter('expense', reduxData);\n    const incomeCategiries = incomeExpenseFilter('income', reduxData);\n\n    const expenseCategiriesTotalSum = expenseCategiries.reduce(\n      (total, item) => (total += item.totalPrice),\n      0\n    );\n    const incomeCategiriesTotalSum = incomeCategiries.reduce(\n      (total, item) => (total += item.totalPrice),\n      0\n    );\n\n    const allCategoriesInOne = expenseCategiries.reduce(\n      (result, item) => (result = [...result, ...item.category]),\n      []\n    );\n    const sumaryCategories = sumTheSameCategories(allCategoriesInOne);\n\n    setTableCategories(sumaryCategories);\n    setTableExpenseSum(expenseCategiriesTotalSum);\n    setTableIncomeSum(incomeCategiriesTotalSum);\n  }, [reduxData, tableCategories]);\n\n  useEffect(() => {\n    function sumTheSameCategories(data) {\n      let sumaryData = [];\n\n      for (let item of data) {\n        if (sumaryData.length === 0) {\n          sumaryData = [\n            {\n              categoryName: item.category,\n              categorySum: item.sum,\n              categoryColor: colorizedCategory(item.category),\n            },\n          ];\n        } else {\n          const exisingItemOnsumaryData = sumaryData.find(\n            element => element.categoryName === item.category\n          );\n\n          if (exisingItemOnsumaryData !== undefined) {\n            exisingItemOnsumaryData.categorySum += item.sum;\n          } else {\n            sumaryData = [\n              ...sumaryData,\n              {\n                categoryName: item.category,\n                categorySum: item.sum,\n                categoryColor: colorizedCategory(item.category),\n              },\n            ];\n          }\n        }\n      }\n\n      return sumaryData;\n    }\n\n    if (monthSelectedValue === null && yearSelectedValue === null) {\n      return;\n    }\n\n    const onDateFilteredData = onDateFilter(\n      { month: monthSelectedValue, year: yearSelectedValue },\n      reduxData\n    );\n\n    const expenseCategiries = incomeExpenseFilter(\n      'expense',\n      onDateFilteredData\n    );\n    const incomeCategiries = incomeExpenseFilter('income', onDateFilteredData);\n\n    const expenseCategiriesTotalSum = expenseCategiries.reduce(\n      (total, item) => (total += item.totalPrice),\n      0\n    );\n    const incomeCategiriesTotalSum = incomeCategiries.reduce(\n      (total, item) => (total += item.totalPrice),\n      0\n    );\n\n    const allCategoriesInOne = expenseCategiries.reduce(\n      (result, item) => (result = [...result, ...item.category]),\n      []\n    );\n    const sumaryCategories = sumTheSameCategories(allCategoriesInOne);\n\n    setTableCategories(sumaryCategories);\n    setTableExpenseSum(expenseCategiriesTotalSum);\n    setTableIncomeSum(incomeCategiriesTotalSum);\n  }, [monthSelectedValue, reduxData, yearSelectedValue]);\n\n  return (\n    <StatisticsContainer>\n      <Chart\n        tableCategories={tableCategories}\n        tableExpenseSum={tableExpenseSum}\n      />\n      <DiagramTabWrapper className=\"diagram-tab__wrapper\">\n        <DiagramTableBar className=\"diagram-tab__table-bar\">\n          <DiagramButtonsWrapper className=\"diagram-tab__buttons-wrapper\">\n            <CustomSelect\n              items={yearDataSet}\n              changeValue={setYearSelectedValue}\n            />\n            <CustomSelect\n              items={monthDataSet}\n              changeValue={setMonthSelectedValue}\n            />\n          </DiagramButtonsWrapper>\n\n          <Table\n            tableCategories={tableCategories}\n            tableIncomeSum={tableIncomeSum}\n            tableExpenseSum={tableExpenseSum}\n          />\n        </DiagramTableBar>\n      </DiagramTabWrapper>\n    </StatisticsContainer>\n  );\n};\n","import { DiagramTab } from './DiagramTab';\n\nexport default DiagramTab;\n"],"names":["SelectWrapper","styled","SelectBtn","props","status","SelectOptionsList","SelectOptionsItem","IconSVG","id","viewBox","width","height","d","CustomSelect","items","changeValue","useState","tittle","selectedText","setSelectedTex","openStatus","setOpenStatus","refToggleDropDown","useRef","handleOutsideDropDown","event","current","contains","target","useEffect","window","addEventListener","removeEventListener","className","ref","onClick","nodeName","itemName","innerText","itemValue","dataset","itemvalue","onSelectChange","data","map","text","value","DiagramTabWrapper","DiagramButtonsWrapper","DiagramTableBar","StatisticsContainer","colorizedCategory","category","findedItem","categoryColor","categoryName","find","item","randomColor","Math","floor","random","toString","undefined","Table","lazy","Chart","reduxData","useGetAllCategoriesQuery","tableCategories","setTableCategories","tableIncomeSum","setTableIncomeSum","tableExpenseSum","setTableExpenseSum","monthSelectedValue","setMonthSelectedValue","yearSelectedValue","setYearSelectedValue","incomeExpenseFilter","type","filter","_id","console","log","expenseCategiries","incomeCategiries","expenseCategiriesTotalSum","reduce","total","totalPrice","incomeCategiriesTotalSum","sumaryCategories","sumaryData","length","categorySum","sum","exisingItemOnsumaryData","element","sumTheSameCategories","result","onDateFilteredData","date","month","year","Number","onDateFilter"],"sourceRoot":""}