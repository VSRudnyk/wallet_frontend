{"version":3,"file":"static/js/DiagramTab.e21778df.chunk.js","mappings":"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","sources":["components/DiagramTab/NewSelectButton/CustomSelect.styled.jsx","stylesheet/IconSVG.jsx","components/DiagramTab/NewSelectButton/CustomSelect.jsx","components/DiagramTab/DiagramTab.styled.jsx","components/DiagramTab/DiagramTab.jsx","components/DiagramTab/index.js"],"sourcesContent":["import styled from \"styled-components\";\nimport '../../../stylesheet/fonts.css';\n\n\nexport const SelectWrapper = styled.div`\n    margin-bottom: 20px;\n    position: relative;\n\n    //border: 1px solid red;\n\n    &:hover {\n        fill: var(--active-blue);\n    }\n\n    // & svg {\n    // position: absolute;\n    // top: 50%;\n    // right: 20px;\n    // transform: translateY(-50%);\n    // cursor: pointer;\n    // transition: fill 500ms ease;\n    // pointer-events: none;\n    // }\n\n`;\nexport const SelectBtn = styled.button`\n    width: 100%;\n    height: 100%;\n    border: 1px solid var(--black);\n    border-radius: 30px;\n    padding: 12px 21px 14px 20px;\n\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-family: var(--baseFont);\n    font-style: normal;\n    font-weight: var(--regular);\n    font-size: 16px;\n    line-height: 1.47;\n    background: none;\n    cursor: pointer;\n    outline: none;\n`;\n\nexport const SelectOptionsList = styled.ul`\n    width: 100%;\n    position: absolute;\n    top: 60px;\n    left: 0;\n    z-index: 1;\n    background-color: #f1f2f7;\n\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    border-radius: 20px;\n    \n`;\nexport const SelectOptionsItem = styled.li`\n    text-align: start;\n    font-family: var(--baseFont);\n    font-style: normal;\n    font-weight: var(--regular);\n    font-size: 16px;\n    line-height: 1.47;\n    cursor: pointer;\n    padding: 5px 21px 5px 20px;\n    border-radius: 10px;\n\n    &:hover {\n        background-color: var(--background-gray);\n    }\n\n`;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const IconSVG = ({id}) => {\n    switch(id) {\n        case 'icon-diagram-tab-arrow-down':\n        return (\n            <svg id=\"icon-diagram-tab-arrow-down\" viewBox=\"0 0 58 32\" width=\"18\" height=\"9\">\n                <path d=\"M3.938 1.881l-2.057 2.057 27.21 27.21 27.21-27.21-2.057-2.057-25.153 25.153z\"></path>\n            </svg>\n        )\n        default:\n        return <svg></svg>\n    }\n}\n\nIconSVG.propTypes = {\n    id: PropTypes.string.isRequired,\n}","import { SelectWrapper, SelectBtn, SelectOptionsList, SelectOptionsItem, } from  './CustomSelect.styled'\nimport { useState } from 'react'\nimport { IconSVG } from 'stylesheet/IconSVG';\n\n\nexport const CustomSelect = ({items}) => {\n\n    const [selectedValue, setSelectedValue] = useState(items.tittle)\n    const [openStatus, setOpenStatus] = useState(false);\n \n    function onSelectClick () {\n        setOpenStatus(!openStatus);\n    }\n\n    function onSelectChange (event) {\n        console.log(event.currentTarget.className)\n\n\n        if (event.target.nodeName !== \"LI\") {\n            return\n        }\n\n        const itemValue = event.target.dataset.itemvalue;\n\n        setSelectedValue(itemValue);\n        setOpenStatus(!openStatus)\n    }\n\n    return (\n        <SelectWrapper className='select__wrapper'>\n            <SelectBtn className='select__button' onClick={onSelectClick}>\n                <span className='select__button__active-text'>{selectedValue}</span>\n                <IconSVG id=\"icon-diagram-tab-arrow-down\" />\n            </SelectBtn>\n\n            {openStatus === true && <SelectOptionsList className='select__options-wrapper options' onClick={event => {\n                onSelectChange(event)\n            }}>\n                {items && items.data.map(item => {\n                    return (\n                        <SelectOptionsItem key={item} className='options__item' data-itemvalue={`${item}`}>{item}</SelectOptionsItem>\n                    )\n                })}\n                {/* <SelectOptionsItem className='options__item' data-itemvalue=\"2019\">2019</SelectOptionsItem>\n                <SelectOptionsItem className='options__item' data-itemvalue=\"2020\">2020</SelectOptionsItem>\n                <SelectOptionsItem className='options__item' data-itemvalue=\"2021\">2021</SelectOptionsItem>\n                <SelectOptionsItem className='options__item' data-itemvalue=\"2022\">2022</SelectOptionsItem> */}\n            </SelectOptionsList>}\n        </SelectWrapper>\n    )\n}","import styled from 'styled-components';\nimport '../../stylesheet/fonts.css';\n\nexport const DiagramTabWrapper = styled.div`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n`;\nexport const DiagramButtonsWrapper = styled.div``;\nexport const DiagramButton = styled.div`\n  position: relative;\n\n  &:hover {\n    fill: var(--active-blue);\n  }\n  & svg {\n    position: absolute;\n    top: 50%;\n    right: 20px;\n    transform: translateY(-50%);\n    cursor: pointer;\n    transition: fill 500ms ease;\n    pointer-events: none;\n  }\n`;\nexport const DiagramCustomSelect = styled.select`\n  display: flex;\n\n  width: 100%;\n  padding: 12px 21px 14px 20px;\n  margin-bottom: 20px;\n  border: 1px solid var(--black);\n  border-radius: 30px;\n\n  font-family: var(--baseFont);\n  font-style: normal;\n  font-weight: var(--regular);\n  font-size: 16px;\n  line-height: 1.47;\n  background: none;\n  cursor: pointer;\n  outline: none;\n\n  appearance: none;\n`;\nexport const DiagramTableBar = styled.div`\n  @media screen and (min-width: 320px) {\n    width: 280px;\n    margin-top: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    //margin-top: 11px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    margin-top: 56px;\n  }\n`;\n\nexport const StatisticsContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;\n","import { lazy } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { CustomSelect } from 'components/DiagramTab/NewSelectButton/CustomSelect'\nimport {\n  DiagramTabWrapper,\n  DiagramButton,\n  DiagramCustomSelect,\n  DiagramTableBar,\n  DiagramButtonsWrapper,\n  StatisticsContainer,\n} from './DiagramTab.styled';\nimport { IconSVG } from 'stylesheet/IconSVG';\nconst Table = lazy(() => import('../Table' /* webpackChunkName: \"Table\" */));\nconst Chart = lazy(() => import('../Chart' /* webpackChunkName: \"Chart\" */));\n\nexport const DiagramTab = () => {\n  const { t } = useTranslation();\n  const reduxData = [\n    {\n      categoryColor: '#FED057',\n      categoryName: 'Basic',\n      categorySum: '8700.00',\n    },\n    {\n      categoryColor: '#FFD8D0',\n      categoryName: 'Products',\n      categorySum: '3800.74',\n    },\n    {\n      categoryColor: '#FD9498',\n      categoryName: 'Car',\n      categorySum: '1500.00',\n    },\n    {\n      categoryColor: '#C5BAFF',\n      categoryName: 'Health',\n      categorySum: '800.00',\n    },\n    {\n      categoryColor: '#6E78E8',\n      categoryName: 'Kids',\n      categorySum: '2208.50',\n    },\n    {\n      categoryColor: '#4A56E2',\n      categoryName: 'Home',\n      categorySum: '300.00',\n    },\n    {\n      categoryColor: '#81E1FF',\n      categoryName: 'Education',\n      categorySum: '3400.00',\n    },\n    {\n      categoryColor: '#24CCA7',\n      categoryName: 'Leisure',\n      categorySum: '1230.00',\n    },\n    {\n      categoryColor: '#00AD84',\n      categoryName: 'Other',\n      categorySum: '610.00',\n    },\n  ];\n\n  return (\n    <StatisticsContainer>\n      <Chart />\n      <DiagramTabWrapper className=\"diagram-tab__wrapper\">\n        <DiagramTableBar className=\"diagram-tab__table-bar\">\n          <DiagramButtonsWrapper className=\"diagram-tab__buttons-wrapper\">\n            <DiagramButton className=\"diagram-btn\">\n              <DiagramCustomSelect\n                defaultValue=\"Month\"\n                name=\"month\"\n                className=\"diagram-btn__select_month\"\n              >\n                <option value=\"Month\" disabled style={{ display: 'none' }}>\n                  {t('diagramTab.optionData.month')}\n                </option>\n                <option value=\"January\">\n                  {t('diagramTab.optionData.jan')}\n                </option>\n                <option value=\"February\">\n                  {t('diagramTab.optionData.feb')}\n                </option>\n                <option value=\"March\">{t('diagramTab.optionData.mar')}</option>\n                <option value=\"April\">{t('diagramTab.optionData.apr')}</option>\n                <option value=\"May\">{t('diagramTab.optionData.may')}</option>\n                <option value=\"June\">{t('diagramTab.optionData.jun')}</option>\n                <option value=\"July\">{t('diagramTab.optionData.jul')}</option>\n                <option value=\"August\">{t('diagramTab.optionData.aug')}</option>\n                <option value=\"September\">\n                  {t('diagramTab.optionData.sep')}\n                </option>\n                <option value=\"October\">\n                  {t('diagramTab.optionData.oct')}\n                </option>\n                <option value=\"November\">\n                  {t('diagramTab.optionData.nov')}\n                </option>\n                <option value=\"December\">\n                  {t('diagramTab.optionData.dec')}\n                </option>\n              </DiagramCustomSelect>\n              <IconSVG id=\"icon-diagram-tab-arrow-down\" />\n            </DiagramButton>\n\n            <DiagramButton className=\"diagram-btn\">\n              <DiagramCustomSelect\n                defaultValue=\"Year\"\n                name=\"year\"\n                className=\"diagram-btn__select_year\"\n              >\n                <option value=\"Year\" disabled style={{ display: 'none' }}>\n                  {t('diagramTab.optionData.year')}\n                </option>\n                <option value=\"2019\">2019</option>\n                <option value=\"2020\">2020</option>\n                <option value=\"2021\">2021</option>\n                <option value=\"2022\">2022</option>\n              </DiagramCustomSelect>\n              <IconSVG id=\"icon-diagram-tab-arrow-down\" />\n            </DiagramButton>\n            <CustomSelect items={{tittle:\"Year\", data: [\"2019\", \"2020\", \"2021\", \"2022\"]}}/>\n            <CustomSelect items={{tittle:\"Month\", data: [\"January\", \"February\", \"March\", \"April\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]}}/>\n          </DiagramButtonsWrapper>\n          <Table tableData={reduxData} />\n        </DiagramTableBar>\n      </DiagramTabWrapper>\n    </StatisticsContainer>\n  );\n};\n","import { DiagramTab } from './DiagramTab';\n\nexport default DiagramTab;\n"],"names":["SelectWrapper","styled","SelectBtn","SelectOptionsList","SelectOptionsItem","IconSVG","id","viewBox","width","height","d","CustomSelect","items","useState","tittle","selectedValue","setSelectedValue","openStatus","setOpenStatus","className","onClick","event","console","log","currentTarget","target","nodeName","itemValue","dataset","itemvalue","onSelectChange","data","map","item","DiagramTabWrapper","DiagramButtonsWrapper","DiagramButton","DiagramCustomSelect","DiagramTableBar","StatisticsContainer","Table","lazy","Chart","t","useTranslation","defaultValue","name","value","disabled","style","display","tableData","categoryColor","categoryName","categorySum"],"sourceRoot":""}