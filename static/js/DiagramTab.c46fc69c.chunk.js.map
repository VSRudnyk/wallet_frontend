{"version":3,"file":"static/js/DiagramTab.c46fc69c.chunk.js","mappings":"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","sources":["components/DiagramTab/NewSelectButton/CustomSelect.styled.jsx","stylesheet/IconSVG.jsx","components/DiagramTab/NewSelectButton/CustomSelect.jsx","components/DiagramTab/DiagramTab.styled.jsx","helpers/colorizedCategory.js","components/DiagramTab/DiagramTab.jsx","components/DiagramTab/index.js"],"sourcesContent":["import styled from \"styled-components\";\nimport '../../../stylesheet/fonts.css';\n\n\nexport const SelectWrapper = styled.div`\n    margin-bottom: 20px;\n    position: relative;\n\n    //border: 1px solid red;\n\n    &:hover {\n        fill: var(--active-blue);\n    }\n\n    \n\n`;\nexport const SelectBtn = styled.button`\n    width: 100%;\n    height: 100%;\n    border: 1px solid var(--black);\n    border-radius: 30px;\n    padding: 12px 21px 14px 20px;\n\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-family: var(--baseFont);\n    font-style: normal;\n    font-weight: var(--regular);\n    font-size: 16px;\n    line-height: 1.47;\n    background: none;\n    cursor: pointer;\n    outline: none;\n\n    & svg {\n        ${props => props.status === true ? `transform: rotateX(180deg);` : `transform: rotateX(0);`}\n        transition: transform 500ms ease;\n    }\n`;\n\nexport const SelectOptionsList = styled.ul`\n    width: 100%;\n    position: absolute;\n    top: 60px;\n    left: 0;\n    z-index: 1;\n    background-color: #f1f2f7;\n\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    border-radius: 20px;\n    \n`;\nexport const SelectOptionsItem = styled.li`\n    text-align: start;\n    font-family: var(--baseFont);\n    font-style: normal;\n    font-weight: var(--regular);\n    font-size: 16px;\n    line-height: 1.47;\n    cursor: pointer;\n    padding: 5px 21px 5px 20px;\n    border-radius: 10px;\n\n    &:hover {\n        background-color: var(--background-gray);\n    }\n\n`;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const IconSVG = ({id}) => {\n    switch(id) {\n        case 'icon-diagram-tab-arrow-down':\n        return (\n            <svg id=\"icon-diagram-tab-arrow-down\" viewBox=\"0 0 58 32\" width=\"18\" height=\"9\">\n                <path d=\"M3.938 1.881l-2.057 2.057 27.21 27.21 27.21-27.21-2.057-2.057-25.153 25.153z\"></path>\n            </svg>\n        )\n        default:\n        return <svg></svg>\n    }\n}\n\nIconSVG.propTypes = {\n    id: PropTypes.string.isRequired,\n}","import { SelectWrapper, SelectBtn, SelectOptionsList, SelectOptionsItem, } from  './CustomSelect.styled'\nimport { useState } from 'react'\nimport { IconSVG } from 'stylesheet/IconSVG';\n\n\nexport const CustomSelect = ({items, changeValue}) => {\n\n    const [selectedText, setSelectedTex] = useState(items.tittle)\n    const [openStatus, setOpenStatus] = useState(false);\n \n    function onSelectClick () {\n        setOpenStatus(!openStatus);  \n    }\n\n    function onSelectChange (event) {\n\n        if (event.target.nodeName !== \"LI\") {\n            return\n        }\n        \n        const itemName = event.target.innerText;\n        const itemValue = event.target.dataset.itemvalue\n\n        setSelectedTex(itemName);\n        changeValue(itemValue);\n        setOpenStatus(!openStatus);\n\n    }\n\n    return (\n        <SelectWrapper className='select__wrapper'>\n            <SelectBtn className='select__button' onClick={onSelectClick} status={openStatus}>\n                <span className='select__button__active-text'>{selectedText}</span>\n                <IconSVG id=\"icon-diagram-tab-arrow-down\"/>\n            </SelectBtn>\n\n            {openStatus === true && <SelectOptionsList className='select__options-wrapper options' onClick={event => {\n                onSelectChange(event)\n            }}>\n                {items && items.data.map(({text, value}) => {\n                    return (\n                        <SelectOptionsItem key={text} className='options__item' data-itemvalue={value}>{text}</SelectOptionsItem>\n                    )\n                })}\n            </SelectOptionsList>}\n        </SelectWrapper>\n    )\n}","import styled from 'styled-components';\nimport '../../stylesheet/fonts.css';\n\nexport const DiagramTabWrapper = styled.div`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n`;\nexport const DiagramButtonsWrapper = styled.div``;\n\nexport const DiagramTableBar = styled.div`\n  @media screen and (min-width: 320px) {\n    width: 280px;\n    margin-top: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    //margin-top: 11px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    margin-top: 56px;\n  }\n`;\n\nexport const StatisticsContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;","export const colorizedCategory = (category) => {\n\n    const categoryColorsData = [\n      {\n        categoryColor: '#FF7DDB',\n        categoryName: 'Main',\n      },\n      {\n        categoryColor: '#FF6E41',\n        categoryName: 'House',\n      },\n      {\n        categoryColor: '#F422FF',\n        categoryName: 'Children',\n      },\n      {\n        categoryColor: '#FF1EA1',\n        categoryName: 'Development',\n      },\n      {\n        categoryColor: '#BE6C31',\n        categoryName: 'Auto',\n      },\n      {\n        categoryColor: '#75D7B4',\n        categoryName: 'Food',\n      },\n      {\n        categoryColor: '#FED057',\n        categoryName: 'Basic expenses',\n      },\n      {\n        categoryColor: '#FFD8D0',\n        categoryName: 'Products',\n      },\n      {\n        categoryColor: '#FD9498',\n        categoryName: 'Car',\n      },\n      {\n        categoryColor: '#C5BAFF',\n        categoryName: 'Self care',\n      },\n      {\n        categoryColor: '#6E78E8',\n        categoryName: 'Child care',\n      },\n      {\n        categoryColor: '#4A56E2',\n        categoryName: 'Household products',\n      },\n      {\n        categoryColor: '#81E1FF',\n        categoryName: 'Education',\n      },\n      {\n        categoryColor: '#24CCA7',\n        categoryName: 'Leisure',\n      },\n      {\n        categoryColor: '#00AD84',\n        categoryName: 'Other expenses',\n      }\n    ]\n    const findedItem = categoryColorsData.find(item => item.categoryName === category);\n    const randomColor = \"#\" + Math.floor(Math.random()*16777215).toString(16);\n    return findedItem !== undefined ? findedItem.categoryColor : randomColor;\n  }","\nimport { lazy, useState, useEffect } from 'react';\nimport { useGetAllCategoriesQuery } from '../../redux/categoriesOperation';\n// import { useTranslation } from 'react-i18next';\n\nimport { CustomSelect } from 'components/DiagramTab/NewSelectButton/CustomSelect'\nimport {\n  DiagramTabWrapper,\n  DiagramTableBar,\n  DiagramButtonsWrapper,\n  StatisticsContainer,\n} from './DiagramTab.styled';\nimport { colorizedCategory } from 'helpers/colorizedCategory';\n\nconst Table = lazy(() => import('../Table' /* webpackChunkName: \"Table\" */));\nconst Chart = lazy(() => import('../Chart' /* webpackChunkName: \"Chart\" */));\n\n\nexport const DiagramTab = () => {\nconst { data: reduxData } = useGetAllCategoriesQuery();\n\n  // const { t } = useTranslation();\n  const [tableCategories, setTableCategories] = useState('');\n  const [tableIncomeSum, setTableIncomeSum] = useState(0)\n  const [tableExpenseSum, setTableExpenseSum] = useState(0)\n\n  const [monthSelectedValue, setMonthSelectedValue] = useState(null);\n  const [yearSelectedValue, setYearSelectedValue] = useState(null);\n\n  const monthDataSet = {\n    tittle:\"Month\",\n    data: [\n      {text: \"January\", value: 1}, \n      {text: \"February\", value: 2}, \n      {text: \"March\", value: 3}, \n      {text: \"April\", value: 4},\n      {text: \"May\", value: 5},\n      {text: \"June\", value: 6},\n      {text: \"July\", value: 7},\n      {text: \"August\", value: 8},\n      {text: \"September\", value: 9},\n      {text: \"October\", value: 10},\n      {text: \"November\", value: 11},\n      {text: \"December\", value: 12}\n    ]\n  }\n\n  const yearDataSet = {\n    tittle:\"Year\",\n    data: [\n      {text: \"2019\", value: 2019}, \n      {text: \"2020\", value: 2020}, \n      {text: \"2021\", value: 2021}, \n      {text: \"2022\", value: 2022}\n    ]\n  };\n  function incomeExpenseFilter (type, data) {\n    switch (type) {\n      case 'income':\n      return data.filter(item => item && item._id.type === 'income');\n\n      case 'expense':\n      return data.filter(item => item && item._id.type === 'expense');\n\n      default: console.log('incorrect type of operation')\n    }\n    \n  }\n  function onDateFilter (date, data) {\n    const {month, year} = date;\n      \n      if (month === null && year === null) {\n        const result = data;\n        return result;\n      }\n        \n  \n      if (month !== null && year === null) {\n\n        const result = data.filter(item => item._id.month === Number(month));\n        return result;\n      }\n        \n  \n      if (month === null && year !== null) {\n\n        const result = data.filter(item => item._id.year === Number(year));\n        return result;\n      }\n        \n  \n      if (month !== null && year !== null) {\n\n        const result = data.filter(item => item._id.month === Number(month) && item._id.year === Number(year));\n        return result;\n      }\n        \n  \n      console.log('incorrect arguments')  \n\n  }\n\nuseEffect (() => {\n\n  function sumTheSameCategories (data) {\n\n    let sumaryData = [];\n  \n    for (let item of data) {\n  \n      if (sumaryData.length === 0) {\n  \n        sumaryData = [{categoryName: item.category, categorySum: item.sum, categoryColor: colorizedCategory(item.category)}]\n  \n      } else {\n  \n        const exisingItemOnsumaryData = sumaryData.find(element => element.categoryName === item.category);\n  \n        if (exisingItemOnsumaryData !== undefined) {\n          exisingItemOnsumaryData.categorySum += item.sum;\n    \n        } else {\n    \n          sumaryData = [...sumaryData, {categoryName: item.category, categorySum: item.sum, categoryColor: colorizedCategory(item.category)}]\n        }\n  \n      }\n  \n  \n  \n    }\n  \n    return sumaryData;\n  }\n\n  if (reduxData === undefined) {\n    return\n  }\n  if (tableCategories !== '') {\n    return\n  }\n\n  const expenseCategiries = incomeExpenseFilter('expense', reduxData);\n  const incomeCategiries = incomeExpenseFilter('income', reduxData);\n\n\n  const expenseCategiriesTotalSum = expenseCategiries.reduce((total, item) => total += item.totalPrice, 0);\n  const incomeCategiriesTotalSum = incomeCategiries.reduce((total, item) => total += item.totalPrice, 0);\n\n\n  const allCategoriesInOne =  expenseCategiries.reduce((result, item) => result = [...result, ...item.category], []);\n  const sumaryCategories = sumTheSameCategories(allCategoriesInOne);\n\n\n\n  \n\n  setTableCategories(sumaryCategories);\n  setTableExpenseSum(expenseCategiriesTotalSum);\n  setTableIncomeSum(incomeCategiriesTotalSum);\n\n},[reduxData, tableCategories])\n\nuseEffect(() => {\n  function sumTheSameCategories (data) {\n\n    let sumaryData = [];\n  \n    for (let item of data) {\n  \n      if (sumaryData.length === 0) {\n  \n        sumaryData = [{categoryName: item.category, categorySum: item.sum, categoryColor: colorizedCategory(item.category)}]\n  \n      } else {\n  \n        const exisingItemOnsumaryData = sumaryData.find(element => element.categoryName === item.category);\n  \n        if (exisingItemOnsumaryData !== undefined) {\n          exisingItemOnsumaryData.categorySum += item.sum;\n    \n        } else {\n    \n          sumaryData = [...sumaryData, {categoryName: item.category, categorySum: item.sum, categoryColor: colorizedCategory(item.category)}]\n        }\n  \n      }\n  \n  \n  \n    }\n  \n    return sumaryData;\n  }\n\n  if (monthSelectedValue === null && yearSelectedValue === null) {\n    return\n  }\n\n  const onDateFilteredData = onDateFilter({month: monthSelectedValue, year: yearSelectedValue}, reduxData);\n\n  const expenseCategiries = incomeExpenseFilter('expense', onDateFilteredData);\n  const incomeCategiries = incomeExpenseFilter('income', onDateFilteredData);\n\n  const expenseCategiriesTotalSum = expenseCategiries.reduce((total, item) => total += item.totalPrice, 0);\n  const incomeCategiriesTotalSum = incomeCategiries.reduce((total, item) => total += item.totalPrice, 0);\n\n  const allCategoriesInOne =  expenseCategiries.reduce((result, item) => result = [...result, ...item.category], []);\n  const sumaryCategories = sumTheSameCategories(allCategoriesInOne);\n\n  setTableCategories(sumaryCategories);\n  setTableExpenseSum(expenseCategiriesTotalSum);\n  setTableIncomeSum(incomeCategiriesTotalSum);\n\n},[monthSelectedValue, reduxData, yearSelectedValue])\n\n\n  return (\n    <StatisticsContainer>\n      <Chart />\n      <DiagramTabWrapper className=\"diagram-tab__wrapper\">\n        <DiagramTableBar className=\"diagram-tab__table-bar\">\n          <DiagramButtonsWrapper className=\"diagram-tab__buttons-wrapper\">\n\n            <CustomSelect items={yearDataSet} changeValue={setYearSelectedValue}/>\n            <CustomSelect items={monthDataSet} changeValue={setMonthSelectedValue}/>\n\n          </DiagramButtonsWrapper>\n\n          <Table tableCategories={tableCategories} tableIncomeSum={tableIncomeSum} tableExpenseSum={tableExpenseSum}/>\n\n        </DiagramTableBar>\n      </DiagramTabWrapper>\n    </StatisticsContainer>\n  );\n};","import { DiagramTab } from './DiagramTab';\n\nexport default DiagramTab;\n"],"names":["SelectWrapper","styled","SelectBtn","props","status","SelectOptionsList","SelectOptionsItem","IconSVG","id","viewBox","width","height","d","CustomSelect","items","changeValue","useState","tittle","selectedText","setSelectedTex","openStatus","setOpenStatus","className","onClick","event","target","nodeName","itemName","innerText","itemValue","dataset","itemvalue","onSelectChange","data","map","text","value","DiagramTabWrapper","DiagramButtonsWrapper","DiagramTableBar","StatisticsContainer","colorizedCategory","category","findedItem","categoryColor","categoryName","find","item","randomColor","Math","floor","random","toString","undefined","Table","lazy","Chart","reduxData","useGetAllCategoriesQuery","tableCategories","setTableCategories","tableIncomeSum","setTableIncomeSum","tableExpenseSum","setTableExpenseSum","monthSelectedValue","setMonthSelectedValue","yearSelectedValue","setYearSelectedValue","incomeExpenseFilter","type","filter","_id","console","log","useEffect","expenseCategiries","incomeCategiries","expenseCategiriesTotalSum","reduce","total","totalPrice","incomeCategiriesTotalSum","sumaryCategories","sumaryData","length","categorySum","sum","exisingItemOnsumaryData","element","sumTheSameCategories","result","onDateFilteredData","date","month","year","Number","onDateFilter"],"sourceRoot":""}