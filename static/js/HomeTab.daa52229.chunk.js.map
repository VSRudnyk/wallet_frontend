{"version":3,"file":"static/js/HomeTab.daa52229.chunk.js","mappings":"kRAEaA,EAAOC,EAAAA,GAAAA,GAAH,uPAcJC,EAAWD,EAAAA,GAAAA,GAAH,gpBAmBK,SAAAE,GAAK,MACR,WAAfA,EAAMC,KAAoB,UAAY,aAWjCC,EAAoBJ,EAAAA,GAAAA,EAAH,oPAajBK,EAAkBL,EAAAA,GAAAA,EAAH,mQAcfM,EAAMN,EAAAA,GAAAA,KAAH,uCACL,SAAAE,GAAK,MAAsB,WAAjBA,EAAMK,OAAsB,UAAY,a,6BCY7D,EA5E0B,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACnBC,GAAMC,EAAAA,EAAAA,KAAND,EACAE,EAAgDH,EAAhDG,KAAMR,EAA0CK,EAA1CL,KAAMS,EAAoCJ,EAApCI,SAAUC,EAA0BL,EAA1BK,QAASC,EAAiBN,EAAjBM,IAAKC,EAAYP,EAAZO,QAEtCC,EAAOC,OAAOC,QAAQ,CAC1BP,KAAAA,EACAR,KAAAA,EACAS,SAAAA,EACAC,QAAAA,EACAC,IAAAA,EACAC,QAAAA,IACCI,KAAI,YAAmB,IAAD,eAAhBC,EAAgB,KAAXC,EAAW,KACvB,OAAQD,GACN,IAAK,OACH,IAAIE,EAAW,IAAIC,KAAKF,GACrBG,cACAC,MAAM,GACNC,UAAU,EAAG,GACbC,MAAM,KACNC,UACAC,KAAK,KACR,OACE,UAAC5B,EAAD,CAAyBE,KAAMA,EAA/B,WACE,SAACC,EAAD,UAAoBK,EAAE,GAAD,OAAIW,OACzB,SAACf,EAAD,oBAAqBiB,QAFRQ,EAAAA,EAAAA,MAKnB,IAAK,OACH,OACE,UAAC7B,EAAD,CAAyBE,KAAMA,EAA/B,WACE,SAACC,EAAD,UAAoBK,EAAE,GAAD,OAAIW,OACzB,SAACf,EAAD,UAAkBI,EAAE,GAAD,OAAIY,SAFVS,EAAAA,EAAAA,MAKnB,IAAK,WACH,OACE,UAAC7B,EAAD,CAAyBE,KAAMA,EAA/B,WACE,SAACC,EAAD,UAAoBK,EAAE,GAAD,OAAIW,OACzB,SAACf,EAAD,UAAkBI,EAAE,GAAD,OAAIY,EAAMU,qBAFhBD,EAAAA,EAAAA,MAKnB,IAAK,UACH,OACE,UAAC7B,EAAD,CAAyBE,KAAMA,EAA/B,WACE,SAACC,EAAD,UAAoBK,EAAE,GAAD,OAAIW,OACzB,SAACf,EAAD,WACE,SAAC,UAAD,CAAc2B,KAAI,UAAKX,GAASY,OAAQ,UAH7BH,EAAAA,EAAAA,MAOnB,IAAK,MACH,OACE,UAAC7B,EAAD,CAAyBE,KAAMA,EAA/B,WACE,SAACC,EAAD,UAAoBK,EAAE,GAAD,OAAIW,OACzB,SAACf,EAAD,WACE,SAACC,EAAD,CAAKC,OAAQJ,EAAb,mBAAuBkB,EAAMa,QAAQ,WAH1BJ,EAAAA,EAAAA,MAOnB,IAAK,UACH,OACE,UAAC7B,EAAD,CAAyBE,KAAMA,EAA/B,WACE,SAACC,EAAD,UAAoBK,EAAE,GAAD,OAAIW,OACzB,SAACf,EAAD,oBAAqBgB,EAAMa,QAAQ,SAFtBJ,EAAAA,EAAAA,MASrB,OAAO,QAGT,OAAO,SAAC/B,EAAD,UAAOiB,K,oBClFHmB,EAAiBnC,EAAAA,GAAAA,IAAH,+JASdoC,EAAQpC,EAAAA,GAAAA,MAAH,gGAOLqC,EAAKrC,EAAAA,GAAAA,GAAH,kcAqBFsC,EAAStC,EAAAA,GAAAA,GAAH,yrBC8HnB,GDxF0BA,EAAAA,GAAAA,IAAH,gFAMMA,EAAAA,GAAAA,OAAH,8PAYIA,EAAAA,GAAAA,KAAH,iLCxFPuC,EAAAA,EAAAA,aAAW,WAAsBC,GAAS,IAA5BC,EAA2B,EAA3BA,gBACxBhC,GAAMC,EAAAA,EAAAA,KAAND,EACFiC,GAAOC,EAAAA,EAAAA,UAAQ,kBAAMF,IAAiB,CAACA,IACvCG,GAAUD,EAAAA,EAAAA,UACd,iBAAM,CACJ,CACEE,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,YAEZ,CACED,OAAQ,UACRC,SAAU,WAEZ,CACED,OAAQ,MACRC,SAAU,OAEZ,CACED,OAAQ,UACRC,SAAU,cAGd,IAEF,GASIC,EAAAA,EAAAA,UACF,CACEH,QAAAA,EACAF,KAAAA,EACAM,aAAc,CAAEC,UAAW,EAAGC,SAAU,KAE1CC,EAAAA,eAdAC,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,WAEAC,EAPF,EAOEA,SACAC,EARF,EAQEA,aA2BF,OALAC,EAAAA,EAAAA,qBAAoBnB,GAAK,iBAAO,CAC9BoB,KAAM,SAAAvC,GAAK,OAdG,SAAAA,GACTA,GAGLoC,IAUeI,CAAQxC,IACvByC,SAAU,SAAAzC,GAAK,OATA,SAAAA,GACVA,GAGLqC,IAKmBK,CAAS1C,SAI5B,SAACc,EAAD,WACE,UAACC,GAAD,kBAAWgB,KAAX,eACE,2BACGE,EAAanC,KAAI,SAAA6C,GAAW,OAC3B,iCAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQ/C,KAAI,SAAAgD,GAAM,OAC7B,SAAC9B,GAAD,kBAAQ8B,EAAOC,kBAAf,aACG3D,EAAE0D,EAAOE,OAAO,UAAUtC,8BAMrC,oCAAWsB,KAAX,aACGE,EAAKpC,KAAI,SAAAmD,GAER,OADAd,EAAWc,IAET,iCAAQA,EAAIC,eAAZ,aACGD,EAAIE,MAAMrD,KAAI,SAAAsD,GAEb,OADeA,EAAKN,OAAOtB,QAEzB,IAAK,OACH,IAAIvB,EAAW,IAAIC,KAAKkD,EAAKJ,OAAO,QAAQnE,MAAMmB,OAC/CG,cACAC,MAAM,GACNC,UAAU,EAAG,GACbC,MAAM,KACNC,UACAC,KAAK,KACR,OACE,SAACS,GAAD,kBAAYmC,EAAKC,gBAAjB,aAAkCpD,KAEtC,IAAK,OAML,IAAK,WACH,OACE,SAACgB,GAAD,kBAAYmC,EAAKC,gBAAjB,aACGjE,EAAEgE,EAAKJ,OAAO,QAAQnE,MAAMmB,MAAMU,kBAIzC,IAAK,UACH,OACE,SAACO,GAAD,kBAAYmC,EAAKC,gBAAjB,cACE,SAAC,UAAD,CACE1C,KAAMyC,EAAKJ,OAAO,QAAQnE,MAAMmB,MAChCY,OAAQ,QAKhB,IAAK,MACH,IAAM0C,EACgB,WAApBL,EAAIM,OAAOzE,KAAoB,UAAY,UAC7C,OACE,SAACmC,GAAD,kBACMmC,EAAKC,gBADX,IAEEG,MAAO,CAAEF,MAAOA,GAFlB,SAIGF,EAAKJ,OAAO,QAAQnE,MAAMmB,MAAMa,QAAQ,MAG/C,IAAK,UACH,OACE,SAACI,GAAD,kBAAYmC,EAAKC,gBAAjB,aACGD,EAAKJ,OAAO,QAAQnE,MAAMmB,MAAMa,QAAQ,MAI/C,QACE,OACE,SAACI,GAAD,kBAAYmC,EAAKC,gBAAjB,aACGD,EAAKJ,OAAO,kC,6BCrJ1BS,EAAiB9E,EAAAA,GAAAA,IAAH,qMACX,kBAAwB,aAAxB,EAAGuD,KAAkC,OAAS,WAUjDxD,EAAOC,EAAAA,GAAAA,GAAH,8KAWJC,EAAWD,EAAAA,GAAAA,GAAH,8SAmDR+E,IAvCkB/E,EAAAA,GAAAA,GAAH,6EAKRA,EAAAA,GAAAA,KAAH,gIAMoBA,EAAAA,GAAAA,GAAH,gTAkBOA,EAAAA,GAAAA,GAAH,yKAUlBA,EAAAA,GAAAA,EAAH,uJAqBJgF,IAbUhF,EAAAA,GAAAA,OAAH,oRAaMA,EAAAA,GAAAA,IAAH,8CAGViF,GAAgBjF,EAAAA,GAAAA,OAAH,oT,WCjG1B,GCkBuB,SAAC,GAAc,IAAZuD,EAAW,EAAXA,KACxB,GAAuC2B,EAAAA,EAAAA,MAA/BxC,EAAR,EAAQA,KAAMyC,EAAd,EAAcA,UAAWC,EAAzB,EAAyBA,UACjB3E,GAAMC,EAAAA,EAAAA,KAAND,EACR,GAAwC4E,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACoB,IAAxBF,EAAarD,QAIjBmD,GAAaG,EAAgB7C,KAC5B,CAACA,EAAMyC,EAAWC,EAAWE,IAEhC,IAAMG,GAAqB,OAAIH,GAAcI,MAAK,SAACC,EAAOC,GACxD,IAAMC,EAAQ,IAAItE,KAAKoE,EAAMhF,MACvBmF,EAAQ,IAAIvE,KAAKqE,EAAMjF,MAC7B,OAAOoF,OAAOD,GAASC,OAAOF,MAE1BG,GAAWC,EAAAA,EAAAA,QAAO,MASxB,OACE,SAACnB,EAAD,CAAgBvB,KAAMA,EAAtB,UACE,SAAC,KAAD,CAAO2C,QAAS,CAAEC,OAAQ,CAAEC,SAAU,MAAtC,SACG,SAAAC,GAAO,OACNA,EAAQF,OACwB,IAA9BV,EAAmBxD,OACjBkD,GACE,SAACmB,EAAA,EAAD,KAEA,SAACvB,GAAD,UAAOtE,EAAE,wBAGX,SAAC,EAAD,UACGgF,EAAmBtE,KAAI,SAAAoF,GACtB,OACE,SAAC,EAAD,WACE,SAAC,EAAD,CAAmB/F,IAAK+F,MADXzE,EAAAA,EAAAA,WAOS,IAA9B2D,EAAmBxD,OACrBkD,GACE,SAACmB,EAAA,EAAD,KAEA,SAACvB,GAAD,UAAOtE,EAAE,wBAGX,iCACE,SAAC,EAAD,CACEgC,gBAAiBgD,EACjBjD,IAAKwD,IACJ,KACH,UAAC,GAAD,YACE,SAAC,GAAD,CAAe7F,KAAK,SAASqG,QAAS,kBAvCnC,SAAAnF,GAAU,IAAD,EACxB,UAAA2E,EAASS,eAAT,SAAkB3C,SAASzC,GAsC6ByC,EAAS,IAArD,UACE,SAAC,MAAD,OAEF,SAAC,GAAD,CAAe3D,KAAK,SAASqG,QAAS,kBA7CvC,SAAAnF,GAAU,IAAD,EACpB,UAAA2E,EAASS,eAAT,SAAkB7C,KAAKvC,GA4CiCuC,EAAK,IAAjD,UACE,SAAC,MAAD","sources":["components/HomeTab/TransactionMobile/TransactionMobile.styled.js","components/HomeTab/TransactionMobile/TransactionMobile.jsx","components/HomeTab/Transaction/Transaction.styled.js","components/HomeTab/Transaction/Transaction.jsx","components/HomeTab/HomeTab.styled.js","components/HomeTab/index.js","components/HomeTab/HomeTab.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  @media screen and (max-width: 767px) {\n    width: 280px;\n    border-radius: 10px;\n\n    overflow: hidden;\n  }\n  @media screen and (min-width: 768px) {\n    display: flex;\n\n    justify-content: space-between;\n  }\n`;\n\nexport const ListItem = styled.li`\n  background-color: transparent;\n\n  @media screen and (max-width: 767px) {\n    display: flex;\n    align-items: center;\n    position: relative;\n\n    padding: 12px 20px 8px 20px;\n    background-color: var(--transaction-item-bg-color);\n\n    border-bottom: 1px solid;\n    border-bottom-color: var(--transaction-underline-color);\n\n    &::before {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      background-color: ${props =>\n        props.type === 'income' ? '#24CCA7' : '#ff6596'};\n      width: 5px;\n      height: 100%;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    width: 110px;\n    display: flex;\n    justify-content: center;\n  }\n`;\nexport const TransactionDescrp = styled.p`\n  font-family: var(--baseFont);\n  font-style: normal;\n  font-weight: var(--bold);\n  font-size: 18px;\n  line-height: 27px;\n\n  color: var(--black);\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const TransactionData = styled.p`\n  position: relative;\n  overflow: hidden;\n  font-family: var(--baseFont);\n  font-style: normal;\n  font-weight: var(-regular);\n  font-size: 16px;\n  line-height: 24px;\n\n  @media (max-width: 767px) {\n    margin-left: auto;\n  }\n`;\n\nexport const Sum = styled.span`\n  color: ${props => (props.income === 'income' ? '#24CCA7' : '#ff6596')};\n`;\n","import {\n  List,\n  ListItem,\n  TransactionDescrp,\n  TransactionData,\n  Sum,\n} from './TransactionMobile.styled';\nimport { v4 as uuidv4 } from 'uuid';\nimport EllipsisText from 'react-ellipsis-text';\nimport { useTranslation } from 'react-i18next';\n\nconst TransactionMobile = ({ obj }) => {\n  const { t } = useTranslation();\n  const { date, type, category, comment, sum, balance } = obj;\n\n  const list = Object.entries({\n    date,\n    type,\n    category,\n    comment,\n    sum,\n    balance,\n  }).map(([key, value]) => {\n    switch (key) {\n      case 'date':\n        let newValue = new Date(value)\n          .toISOString()\n          .slice(2)\n          .substring(0, 8)\n          .split('-')\n          .reverse()\n          .join('.');\n        return (\n          <ListItem key={uuidv4()} type={type}>\n            <TransactionDescrp>{t(`${key}`)}</TransactionDescrp>\n            <TransactionData>{`${newValue}`}</TransactionData>\n          </ListItem>\n        );\n      case 'type':\n        return (\n          <ListItem key={uuidv4()} type={type}>\n            <TransactionDescrp>{t(`${key}`)}</TransactionDescrp>\n            <TransactionData>{t(`${value}`)}</TransactionData>\n          </ListItem>\n        );\n      case 'category':\n        return (\n          <ListItem key={uuidv4()} type={type}>\n            <TransactionDescrp>{t(`${key}`)}</TransactionDescrp>\n            <TransactionData>{t(`${value.toLowerCase()}`)}</TransactionData>\n          </ListItem>\n        );\n      case 'comment':\n        return (\n          <ListItem key={uuidv4()} type={type}>\n            <TransactionDescrp>{t(`${key}`)}</TransactionDescrp>\n            <TransactionData>\n              <EllipsisText text={`${value}`} length={20} />\n            </TransactionData>\n          </ListItem>\n        );\n      case 'sum':\n        return (\n          <ListItem key={uuidv4()} type={type}>\n            <TransactionDescrp>{t(`${key}`)}</TransactionDescrp>\n            <TransactionData>\n              <Sum income={type}>{`${value.toFixed(2)}`}</Sum>\n            </TransactionData>\n          </ListItem>\n        );\n      case 'balance':\n        return (\n          <ListItem key={uuidv4()} type={type}>\n            <TransactionDescrp>{t(`${key}`)}</TransactionDescrp>\n            <TransactionData>{`${value.toFixed(2)}`}</TransactionData>\n          </ListItem>\n        );\n\n      default:\n        break;\n    }\n    return null;\n  });\n\n  return <List>{list}</List>;\n};\n\nexport default TransactionMobile;\n","import styled from 'styled-components';\n\nexport const TableContainer = styled.div`\n  position: relative;\n  height: 35vh;\n  overflow: hidden;\n  overflow-y: scroll;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`;\nexport const Table = styled.table`\n  width: 100%;\n  @media (min-width: 1280px) {\n    width: 715px;\n  }\n`;\n\nexport const Th = styled.th`\n  position: sticky;\n  top: 0;\n  background-color: #ffffff;\n  padding: 16px 0 15px 0;\n  font-family: var(--baseFont);\n  font-style: normal;\n  font-weight: var(--bold);\n  font-size: 18px;\n  line-height: 27px;\n  &:first-child {\n    border-top-left-radius: 30px;\n    border-bottom-left-radius: 30px;\n  }\n  &:last-child {\n    border-top-right-radius: 30px;\n    border-bottom-right-radius: 30px;\n  }\n  z-index: 1;\n`;\n\nexport const BodyTd = styled.td`\n  position: relative;\n  padding: 16px 0 15px 0;\n  font-family: var(--baseFont);\n  font-style: normal;\n  font-weight: var(--regular);\n  font-size: 18px;\n  line-height: 27px;\n  word-wrap: break-word;\n  &:first-child {\n    padding-left: 20px;\n  }\n  &:last-child {\n    padding-right: 20px;\n  }\n  &::after {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: 56.396px;\n    background-color: #dcdcdf;\n    box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n    width: 100%;\n    height: 1px;\n  }\n  &:first-child {\n    &::after {\n      left: 17px;\n      width: 84%;\n    }\n  }\n  &:last-child {\n    &::after {\n      width: 84%;\n    }\n  }\n`;\n/////////PAGINATION////////////\nexport const Pagination = styled.div`\n  position: absolute;\n  top: 486px;\n\n  width: 100%;\n`;\nexport const PaginationBtn = styled.button`\n  width: 50px;\n  padding: 10px;\n  border: none;\n  background-color: transparent;\n  outline: 1px solid rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  &:hover {\n    background-color: var(--blue);\n    fill: var(--white);\n  }\n`;\nexport const PaginationSpan = styled.span`\n  font-family: var(--baseFont);\n  font-style: normal;\n  font-weight: var(--regular);\n  font-size: 18px;\n  line-height: 27px;\n  margin-left: 20px;\n`;\n","import { useMemo, forwardRef, useImperativeHandle } from 'react';\nimport { useTable, usePagination } from 'react-table';\nimport { useTranslation } from 'react-i18next';\nimport EllipsisText from 'react-ellipsis-text';\n\nimport { TableContainer, Table, Th, BodyTd } from './Transaction.styled';\n\nconst Transaction = forwardRef(({ transactionList }, ref) => {\n  const { t } = useTranslation();\n  const data = useMemo(() => transactionList, [transactionList]);\n  const columns = useMemo(\n    () => [\n      {\n        Header: 'Date',\n        accessor: 'date',\n      },\n      {\n        Header: 'Type',\n        accessor: 'type',\n      },\n      {\n        Header: 'Category',\n        accessor: 'category',\n      },\n      {\n        Header: 'Comment',\n        accessor: 'comment',\n      },\n      {\n        Header: 'Sum',\n        accessor: 'sum',\n      },\n      {\n        Header: 'Balance',\n        accessor: 'balance',\n      },\n    ],\n    []\n  );\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n\n    nextPage,\n    previousPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      initialState: { pageIndex: 0, pageSize: 10 },\n    },\n    usePagination\n  );\n  const pageFwd = value => {\n    if (!value) {\n      return;\n    }\n    nextPage();\n  };\n  const pageBack = value => {\n    if (!value) {\n      return;\n    }\n    previousPage();\n  };\n\n  useImperativeHandle(ref, () => ({\n    next: value => pageFwd(value),\n    previous: value => pageBack(value),\n  }));\n\n  return (\n    <TableContainer>\n      <Table {...getTableProps()}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <Th {...column.getHeaderProps()}>\n                  {t(column.render('Header').toLowerCase())}\n                </Th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map(row => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map(cell => {\n                  const header = cell.column.Header;\n                  switch (header) {\n                    case 'Date':\n                      let newValue = new Date(cell.render('Cell').props.value)\n                        .toISOString()\n                        .slice(2)\n                        .substring(0, 8)\n                        .split('-')\n                        .reverse()\n                        .join('.');\n                      return (\n                        <BodyTd {...cell.getCellProps()}>{newValue}</BodyTd>\n                      );\n                    case 'Type':\n                      return (\n                        <BodyTd {...cell.getCellProps()}>\n                          {t(cell.render('Cell').props.value.toLowerCase())}\n                        </BodyTd>\n                      );\n                    case 'Category':\n                      return (\n                        <BodyTd {...cell.getCellProps()}>\n                          {t(cell.render('Cell').props.value.toLowerCase())}\n                        </BodyTd>\n                      );\n\n                    case 'Comment':\n                      return (\n                        <BodyTd {...cell.getCellProps()}>\n                          <EllipsisText\n                            text={cell.render('Cell').props.value}\n                            length={20}\n                          />\n                        </BodyTd>\n                      );\n\n                    case 'Sum':\n                      const color =\n                        row.values.type === 'income' ? '#24CCA7' : '#ff6596';\n                      return (\n                        <BodyTd\n                          {...cell.getCellProps()}\n                          style={{ color: color }}\n                        >\n                          {cell.render('Cell').props.value.toFixed(2)}\n                        </BodyTd>\n                      );\n                    case 'Balance':\n                      return (\n                        <BodyTd {...cell.getCellProps()}>\n                          {cell.render('Cell').props.value.toFixed(2)}\n                        </BodyTd>\n                      );\n\n                    default:\n                      return (\n                        <BodyTd {...cell.getCellProps()}>\n                          {cell.render('Cell')}\n                        </BodyTd>\n                      );\n                  }\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </TableContainer>\n  );\n});\n\nexport default Transaction;\n","import styled from 'styled-components';\n\nexport const HomeTabWrapper = styled.div`\n  /* display: ${({ page }) => (page === 'currency' ? 'none' : 'block')}; */\n  & > button:nth-child(1) {\n    margin-right: 30px;\n  }\n  @media screen and (min-width: 768px) {\n    display: block;\n    margin-top: 46px;\n  }\n`;\n\nexport const List = styled.ul`\n  height: 65vh;\n  overflow-y: scroll;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n  @media (min-width: 768px) {\n    margin-top: 55px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 8px;\n  background-color: transparent;\n  @media screen and (min-width: 768px) {\n    margin: 0;\n    padding: 16px 0 15px 0;\n    background-color: transparent;\n    border-bottom: 1px solid;\n    border-bottom-color: var(--transaction-underline-color);\n  }\n`;\n\nexport const TransactionSpan = styled.ul`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Span = styled.span`\n  font-family: var(--baseFont);\n  font-weight: var(--bold);\n  font-size: 18px;\n  line-height: 27px;\n`;\nexport const TransactionsContainer = styled.ul`\n  position: relative;\n  border-radius: 30px;\n  overflow: hidden;\n  height: 40vh;\n  overflow-y: scroll;\n  scroll-behavior: smooth;\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media (min-width: 1280px) {\n    &:nth-child(2) {\n      margin-top: 50px;\n    }\n  }\n`;\n\nexport const TransactionsContainerItem = styled.li`\n  background-color: transparent;\n  @media (min-width: 768px) {\n    width: 704px;\n  }\n  @media (min-width: 1280px) {\n    width: 660px;\n  }\n`;\n\nexport const Text = styled.p`\n  margin-top: 100px;\n  font-family: var(--baseFont);\n  font-weight: var(--bold);\n  font-size: 18px;\n  line-height: 27px;\n`;\n\nexport const TempBtn = styled.button`\n  background-color: var(--active-blue);\n  color: var(--white);\n  border: none;\n  padding: 10px;\n  border-radius: 10px;\n  margin-bottom: 20px;\n  font-family: var(--baseFont);\n  font-weight: var(--bold);\n  font-size: 18px;\n  line-height: 27px;\n`;\n////PAGINATION//////\nexport const Pagination = styled.div`\n  margin-top: 30px;\n`;\nexport const PaginationBtn = styled.button`\n  width: 50px;\n  padding: 10px;\n  border: none;\n  background-color: transparent;\n  outline: 1px solid rgba(0, 0, 0, 0.4);\n  border-radius: 10px;\n  &:hover {\n    background-color: var(--blue);\n    fill: var(--white);\n  }\n  &:not(:last-child) {\n    margin-right: 20px;\n  }\n`;\n","import { HomeTab } from './HomeTab';\n\nexport default HomeTab;\n","import { useState, useEffect, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TransactionMobile from './TransactionMobile/TransactionMobile';\nimport Transaction from './Transaction';\nimport { useGetAllTransactionsQuery } from '../../redux/transactionsOperation';\nimport { Loader } from 'components/Loader';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { AiOutlineLeft, AiOutlineRight } from 'react-icons/ai';\n\nimport {\n  HomeTabWrapper,\n  List,\n  ListItem,\n  Text,\n  Pagination,\n  PaginationBtn,\n} from './HomeTab.styled';\nimport Media from 'react-media';\n\nexport const HomeTab = ({ page }) => {\n  const { data, isLoading, isSuccess } = useGetAllTransactionsQuery();\n  const { t } = useTranslation();\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    if (transactions.length !== 0) {\n      return;\n    }\n\n    isSuccess && setTransactions(data);\n  }, [data, isLoading, isSuccess, transactions]);\n\n  const sortedTransactions = [...transactions].sort((item1, item2) => {\n    const date1 = new Date(item1.date);\n    const date2 = new Date(item2.date);\n    return Number(date2) - Number(date1);\n  });\n  const childRef = useRef(null);\n\n  const next = value => {\n    childRef.current?.next(value);\n  };\n  const previous = value => {\n    childRef.current?.previous(value);\n  };\n\n  return (\n    <HomeTabWrapper page={page}>\n      <Media queries={{ mobile: { maxWidth: 767 } }}>\n        {matches =>\n          matches.mobile ? (\n            sortedTransactions.length === 0 ? (\n              isLoading ? (\n                <Loader />\n              ) : (\n                <Text>{t('noTransactionText')}</Text>\n              )\n            ) : (\n              <List>\n                {sortedTransactions.map(transaction => {\n                  return (\n                    <ListItem key={uuidv4()}>\n                      <TransactionMobile obj={transaction} />\n                    </ListItem>\n                  );\n                })}\n              </List>\n            )\n          ) : sortedTransactions.length === 0 ? (\n            isLoading ? (\n              <Loader />\n            ) : (\n              <Text>{t('noTransactionText')}</Text>\n            )\n          ) : (\n            <>\n              <Transaction\n                transactionList={sortedTransactions}\n                ref={childRef}\n              />{' '}\n              <Pagination>\n                <PaginationBtn type=\"button\" onClick={() => previous(true)}>\n                  <AiOutlineLeft />\n                </PaginationBtn>\n                <PaginationBtn type=\"button\" onClick={() => next(true)}>\n                  <AiOutlineRight />\n                </PaginationBtn>\n              </Pagination>\n            </>\n          )\n        }\n      </Media>\n    </HomeTabWrapper>\n  );\n};\n"],"names":["List","styled","ListItem","props","type","TransactionDescrp","TransactionData","Sum","income","obj","t","useTranslation","date","category","comment","sum","balance","list","Object","entries","map","key","value","newValue","Date","toISOString","slice","substring","split","reverse","join","uuidv4","toLowerCase","text","length","toFixed","TableContainer","Table","Th","BodyTd","forwardRef","ref","transactionList","data","useMemo","columns","Header","accessor","useTable","initialState","pageIndex","pageSize","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","nextPage","previousPage","useImperativeHandle","next","pageFwd","previous","pageBack","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","color","values","style","HomeTabWrapper","Text","Pagination","PaginationBtn","useGetAllTransactionsQuery","isLoading","isSuccess","useState","transactions","setTransactions","useEffect","sortedTransactions","sort","item1","item2","date1","date2","Number","childRef","useRef","queries","mobile","maxWidth","matches","Loader","transaction","onClick","current"],"sourceRoot":""}