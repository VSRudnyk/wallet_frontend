{"version":3,"file":"static/js/683.0ac56a4a.chunk.js","mappings":"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","sources":["../node_modules/chart.js/dist/chunks/helpers.segment.js","../node_modules/chart.js/dist/chart.esm.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js"],"sourcesContent":["/*!\n * Chart.js v3.8.2\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.slice(pos, idx)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { toFont as $, _rlookupByKey as A, _isPointInArea as B, getAngleFromPoint as C, toPadding as D, each as E, getMaximumSize as F, _getParentNode as G, HALF_PI as H, readUsedSize as I, throttled as J, supportsEventListenerOptions as K, _isDomSupported as L, log10 as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, toDegrees as S, TAU as T, _measureText as U, _int16Range as V, _alignPixel as W, clipArea as X, renderText as Y, unclipArea as Z, _arrayUnique as _, resolve as a, RAD_PER_DEG as a$, _toLeftRightCenter as a0, _alignStartEnd as a1, overrides as a2, merge as a3, _capitalize as a4, descriptors as a5, isFunction as a6, _attachContext as a7, _createResolver as a8, _descriptors as a9, _textX as aA, restoreTextDirection as aB, drawPointLegend as aC, noop as aD, distanceBetweenPoints as aE, _setMinAndMaxByKey as aF, niceNum as aG, almostWhole as aH, almostEquals as aI, _decimalPlaces as aJ, _longestText as aK, _filterBetween as aL, _lookup as aM, isPatternOrGradient as aN, getHoverColor as aO, clone$1 as aP, _merger as aQ, _mergerIf as aR, _deprecated as aS, toFontString as aT, splineCurve as aU, splineCurveMonotone as aV, getStyle as aW, fontString as aX, toLineHeight as aY, PITAU as aZ, INFINITY as a_, mergeIf as aa, uid as ab, debounce as ac, retinaScale as ad, clearCanvas as ae, setsEqual as af, _elementsEqual as ag, _isClickEvent as ah, _isBetween as ai, _readValueToProps as aj, _updateBezierControlPoints as ak, _computeSegments as al, _boundSegments as am, _steppedInterpolation as an, _bezierInterpolation as ao, _pointInLine as ap, _steppedLineTo as aq, _bezierCurveTo as ar, drawPoint as as, addRoundedRectPath as at, toTRBL as au, toTRBLCorners as av, _boundSegment as aw, _normalizeAngle as ax, getRtlAdapter as ay, overrideTextDirection as az, isArray as b, QUARTER_PI as b0, TWO_THIRDS_PI as b1, _angleDiff as b2, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.8.2\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _isPointInArea, C as getAngleFromPoint, D as toPadding, E as each, F as getMaximumSize, G as _getParentNode, I as readUsedSize, J as throttled, K as supportsEventListenerOptions, L as _isDomSupported, M as log10, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as toDegrees, U as _measureText, V as _int16Range, W as _alignPixel, X as clipArea, Y as renderText, Z as unclipArea, $ as toFont, a0 as _toLeftRightCenter, a1 as _alignStartEnd, a2 as overrides, a3 as merge, a4 as _capitalize, a5 as descriptors, a6 as isFunction, a7 as _attachContext, a8 as _createResolver, a9 as _descriptors, aa as mergeIf, ab as uid, ac as debounce, ad as retinaScale, ae as clearCanvas, af as setsEqual, ag as _elementsEqual, ah as _isClickEvent, ai as _isBetween, aj as _readValueToProps, ak as _updateBezierControlPoints, al as _computeSegments, am as _boundSegments, an as _steppedInterpolation, ao as _bezierInterpolation, ap as _pointInLine, aq as _steppedLineTo, ar as _bezierCurveTo, as as drawPoint, at as addRoundedRectPath, au as toTRBL, av as toTRBLCorners, aw as _boundSegment, ax as _normalizeAngle, ay as getRtlAdapter, az as overrideTextDirection, aA as _textX, aB as restoreTextDirection, aC as drawPointLegend, aD as noop, aE as distanceBetweenPoints, aF as _setMinAndMaxByKey, aG as niceNum, aH as almostWhole, aI as almostEquals, aJ as _decimalPlaces, aK as _longestText, aL as _filterBetween, aM as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.8.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  Object.assign(chart.options, nextOptions);\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types';\nimport { Chart } from './chart';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}"],"names":["requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","noop","uid","id","isNullOrUndef","value","isArray","type","Object","toString","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","obj","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","x","y","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","v","lim","l","h","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","names","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","nameParse","j","ok","nk","unpacked","tkeys","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","rgbParse","Color","ret","hexParse","this","_rgb","_valid","hslString","color","weight","w2","c1","c2","w1","rgb1","rgb2","interpolate","val","deg","rotate","index_esm","isPatternOrGradient","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","node","split","set","root","scope","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","get","local","defaults","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","push","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","line","opts","lines","strokeWidth","strokeColor","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","forEach","_arrayUnique","items","Set","add","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","_scopes","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_cacheable","_proxy","_context","_subProxy","_stack","setContext","override","receiver","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","constructor","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","_rootScopes","allScopes","addScopesFromKey","_getTarget","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointsLen","pointAfter","monotoneCompute","delta","pointBefore","valueAxis","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","touches","offsetX","offsetY","box","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","bounds","prevValue","startBound","endBound","getSegment","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","styleChanged","p0","p0DataIndex","p1DataIndex","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","anims","date","callbacks","numSteps","duration","initial","currentStep","_update","_refresh","Date","now","remaining","running","draw","_active","_total","tick","pop","_notify","charts","complete","progress","event","cb","_getAnims","reduce","acc","cur","_duration","cancel","animator","interpolators","boolean","factor","c0","valid","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","then","update","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","otherValue","singleMode","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","labels","getLabels","singleScale","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","hidden","createStack","NEGATIVE_INFINITY","getUserBounds","minDefined","maxDefined","otherMin","otherMax","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","disabled","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","firstOpts","previouslySharedOptions","getSharedOptions","includeOptions","updateSharedOptions","_resolveAnimations","_setStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_dataChanges","arguments","_sync","newCount","computeMinSampleSize","curr","_cache","$bar","visibleMetas","concat","getAllParsedValues","sort","getAllScaleValues","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","reset","getBasePixel","isHorizontal","ruler","_getRuler","_getSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","last","grouped","skipNull","_getStacks","pixels","barThickness","_startPixel","_endPixel","stackCount","_getStackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","circumference","isDatasetVisible","_getRotation","_getCircumference","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","_getRotationExtents","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","_circumference","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","stop","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","abstract","DateAdapter","timestamp","amount","unit","weekday","members","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","layout","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refit","refitBoxes","setBoxDims","placeBoxes","userPadding","padding","autoPadding","_layers","z","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","maxLabelDiagonal","numTicks","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","tickFont","fontString","nestedLabel","caches","widths","heights","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","decimal","getBaseValue","createTickContext","optionTicks","rot","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","lineCount","textOffset","tickAndPadding","hTickAndPadding","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","backdrop","labelPadding","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","fontSize","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","Registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","localIds","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","getResolver","subPrefixes","needContext","subResolver","resolverCache","hasFunction","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","chartOptionScopes","OffscreenCanvas","_detectPlatform","updateConfig","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","listen","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","init","hasUpdated","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","ensureScalesHaveIDs","buildOrUpdateScales","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","setDatasetVisibility","_updateVisibility","_destroy","remove","_stop","releaseContext","toDataURL","bindUserEvents","bindResponsiveEvents","_add","detached","_remove","isAttached","activeElements","lastActive","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","getElementsAtEventForMode","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","version","unregister","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","rtlHelper","hitbox","_draw","cursor","defaultColor","fontColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","_args","adjustHitBoxes","afterEvent","handleEvent","ci","WeakMap","positioners","average","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","textColor","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","_willRender","labelCount","findOrAddLabel","addedLabels","unshift","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","niceMin","niceMax","numSpaces","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","stepSize","computeTickLimit","getTickLimit","_maxDigits","LinearScale","handleTickRangeOptions","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","_parseOpts","parser","isoWeekday","startOf","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","formats","normalized","_applyBounds","_getLabelBounds","endOf","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","minorFormat","majorFormat","_tickFormatFunction","offsets","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","_getLabelSize","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","param","redraw","fallbackContent","updateMode","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","destroy","useEffect","nextOptions","role","forwardRef","createTypedChart","registerables","Doughnut","_superPropBase","desc"],"sourceRoot":""}