{"version":3,"file":"static/js/Currency.d732c2f1.chunk.js","mappings":"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","sources":["CONST/const.js","components/Currency/Currency.styled.js","components/Currency/index.js","components/Currency/Currency.jsx"],"sourcesContent":["const USD = 'USD';\nconst EUR = 'EUR';\nconst PLZ = 'PLZ';\nconst RUB = 'RUB';\nconst UAH = 'UAH';\nconst UZS = 'UZS';\n\nexport { USD, EUR, PLZ, RUB, UAH, UZS };\n","import styled from 'styled-components';\n\nimport Line from '../../assets/images/line-currency-min.png';\n\nexport const TableWrapper = styled.div`\n  margin-top: 15px;\n  @media screen and (min-width: 768px) {\n    position: relative;\n    display: block;\n    width: 336px;\n    margin-top: 0;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 393px;\n  }\n`;\n\nexport const TableHeaderContainer = styled.div`\n  background: var(--blue);\n  padding: 11px 20px 12px 20px;\n  border-radius: 30px 30px 0px 0px;\n  @media screen and (min-width: 1280px) {\n    padding: 17px 64px 16px 44px;\n  }\n`;\n\nexport const TableHeaderList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const TableHeaderListItem = styled.li`\n  font-family: var(--baseFont);\n  font-style: normal;\n  font-weight: var(--bold);\n  font-size: 18px;\n  line-height: 27px;\n  text-align: center;\n  color: var(--white);\n`;\n\nexport const TableBodyContainer = styled.div`\n  background: var(--active-blue);\n  border-bottom-left-radius: 30px;\n  border-bottom-right-radius: 30px;\n  padding: 12px 15px 16px 20px;\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    padding: 16px 15px 12px 20px;\n  }\n  @media screen and (min-width: 1280px) {\n    height: 282px;\n    padding: 20px 61px 20px 58px;\n  }\n  background-image: linear-gradient(\n      180deg,\n      rgba(255, 255, 255, 0.2) -8.67%,\n      rgba(255, 255, 255, 0) 116.22%\n    ),\n    url(${Line});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: bottom;\n`;\n\nexport const TableBodyList = styled.ul`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  height: 124px;\n  overflow-y: hidden;\n  overflow-y: scroll;\n  width: 260px;\n  &::-webkit-scrollbar {\n    width: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: 310px;\n    height: 111px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 290px;\n    height: 270px;\n  }\n`;\n\nexport const TableBodyListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 240px;\n  @media screen and (min-width: 768px) {\n    width: 300px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 269px;\n  }\n`;\n\nexport const TableBodyText = styled.p`\n  font-family: var(--baseFont);\n  font-style: normal;\n  font-weight: var(--reqular);\n  font-size: 16px;\n  line-height: 24px;\n\n  width: 36px;\n  height: 24px;\n  &:not(:last-child) {\n    margin-right: 64px;\n  }\n\n  color: var(--white);\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 40px;\n    &:not(:last-child) {\n      margin-right: 95px;\n    }\n  }\n  @media screen and (min-width: 1280px) {\n    &:not(:last-child) {\n      margin-right: 0;\n      margin-bottom: 24px;\n    }\n  }\n`;\n\nexport const LoaderWrapper = styled.div`\n  @media screen and (min-width: 320px) {\n    margin-left: 100px;\n    margin-top: 30px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-top: 20px;\n    margin-left: 120px;\n  }\n  @media screen and (min-width: 1280px) {\n    position: absolute;\n    left: 50%;\n    top: 40%;\n    transform: translate(-50%, -50%);\n    margin-top: 0px;\n    margin-left: 0px;\n  }\n`;\n","import { Currency } from './Currency.jsx';\n\nexport default Currency;\n","import { v4 as uuidv4 } from 'uuid';\nimport { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Loader } from 'components/Loader';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport Media from 'react-media';\nimport { USD, EUR, PLZ, RUB, UAH, UZS } from 'CONST/const';\nimport {\n  TableHeaderContainer,\n  TableHeaderList,\n  TableHeaderListItem,\n  TableBodyContainer,\n  TableBodyList,\n  TableBodyListItem,\n  TableBodyText,\n  TableWrapper,\n} from './Currency.styled';\nimport { useLocation, Navigate } from 'react-router-dom';\n\nexport const Currency = () => {\n  const [currency, setCurrency] = useState([]);\n  const [status, setStatus] = useState('pending');\n  const { t } = useTranslation();\n\n  const location = useLocation();\n  const { pathname } = location;\n\n  useEffect(() => {\n    setStatus('pending');\n    let data = new Date();\n    let currentDate = data.getTime();\n\n    const isSaveLocal = JSON.parse(localStorage.getItem('currency'));\n    if (isSaveLocal) {\n      const time = currentDate - isSaveLocal.date;\n      if (time < 3600000) {\n        setStatus('resolve');\n        setCurrency(isSaveLocal.currency);\n        return;\n      }\n    }\n    async function FetchCurrency() {\n      const arrMainCurrency = [];\n      let result = null;\n      try {\n        const currency = await axios(\n          'https://wallet-backend-1.herokuapp.com/api/currency'\n        );\n\n        for (let currencyBack of currency.data.exchangeRate) {\n          if (\n            currencyBack.currency === USD ||\n            currencyBack.currency === EUR ||\n            currencyBack.currency === PLZ\n          ) {\n            arrMainCurrency.push(currencyBack);\n          }\n        }\n        result = currency.data.exchangeRate.filter(\n          cur =>\n            cur.currency !== RUB &&\n            cur.currency !== USD &&\n            cur.currency !== EUR &&\n            cur.currency !== PLZ &&\n            cur.currency !== UAH &&\n            cur.currency !== UZS &&\n            cur.currency !== undefined\n        );\n\n        result.push(...arrMainCurrency);\n        const DateToLocal = {\n          date: data.getTime(),\n          currency: result.reverse(),\n        };\n        localStorage.setItem('currency', JSON.stringify(DateToLocal));\n        setStatus('resolve');\n        return setCurrency(result);\n      } catch (error) {\n        console.log(error);\n        toast.error('Something wrong, try again!');\n      }\n    }\n    FetchCurrency();\n  }, []);\n  return (\n    <>\n      <Media queries={{ table: { minWidth: 768 } }}>\n        {matches =>\n          matches.table &&\n          pathname !== '/wallet_frontend/home' &&\n          pathname !== '/wallet_frontend/diagram' && (\n            <Navigate to=\"/wallet_frontend/home\" />\n          )\n        }\n      </Media>\n      <Media queries={{ mobile: { minWidth: 320 } }}>\n        {matches =>\n          matches.mobile &&\n          pathname === '/wallet_frontend/currency' && (\n            <TableWrapper>\n              <TableHeaderContainer>\n                <TableHeaderList>\n                  <TableHeaderListItem key={uuidv4()}>\n                    {t('currencyPage.currency')}\n                  </TableHeaderListItem>\n                  <TableHeaderListItem key={uuidv4()}>\n                    {t('currencyPage.purchase')}\n                  </TableHeaderListItem>\n                  <TableHeaderListItem key={uuidv4()}>\n                    {t('currencyPage.sale')}\n                  </TableHeaderListItem>\n                </TableHeaderList>\n              </TableHeaderContainer>\n              <TableBodyContainer>\n                <TableBodyList>\n                  {currency.length > 0 &&\n                    currency.map(({ currency, purchaseRateNB, saleRateNB }) => {\n                      return (\n                        <TableBodyListItem key={uuidv4()}>\n                          <TableBodyText>{currency}</TableBodyText>\n                          <TableBodyText>\n                            {Number(purchaseRateNB).toFixed(2)}\n                          </TableBodyText>\n                          <TableBodyText>\n                            {Number(saleRateNB).toFixed(2)}\n                          </TableBodyText>\n                        </TableBodyListItem>\n                      );\n                    })}\n\n                  {status === 'pending' && (\n                    <Loader color=\"#e7e5f2\" size=\"35px\" />\n                  )}\n                </TableBodyList>\n              </TableBodyContainer>\n            </TableWrapper>\n          )\n        }\n      </Media>\n      <Media queries={{ tablet: { minWidth: 768 } }}>\n        {matches =>\n          matches.tablet && (\n            <TableWrapper>\n              <TableHeaderContainer>\n                <TableHeaderList>\n                  <TableHeaderListItem>\n                    {t('currencyPage.currency')}\n                  </TableHeaderListItem>\n                  <TableHeaderListItem>\n                    {t('currencyPage.purchase')}\n                  </TableHeaderListItem>\n                  <TableHeaderListItem>\n                    {t('currencyPage.sale')}\n                  </TableHeaderListItem>\n                </TableHeaderList>\n              </TableHeaderContainer>\n              <TableBodyContainer>\n                <TableBodyList>\n                  {currency.length > 0 &&\n                    currency.map(({ currency, purchaseRateNB, saleRateNB }) => {\n                      return (\n                        <TableBodyListItem key={uuidv4()}>\n                          <TableBodyText>{currency}</TableBodyText>\n                          <TableBodyText>\n                            {Number(purchaseRateNB).toFixed(2)}\n                          </TableBodyText>\n                          <TableBodyText>\n                            {Number(saleRateNB).toFixed(2)}\n                          </TableBodyText>\n                        </TableBodyListItem>\n                      );\n                    })}\n                  {status === 'pending' && (\n                    <Loader color=\"#e7e5f2\" size=\"45px\" />\n                  )}\n                </TableBodyList>\n              </TableBodyContainer>\n            </TableWrapper>\n          )\n        }\n      </Media>\n    </>\n  );\n};\n"],"names":["USD","EUR","PLZ","TableWrapper","styled","TableHeaderContainer","TableHeaderList","TableHeaderListItem","TableBodyContainer","Line","TableBodyList","TableBodyListItem","TableBodyText","useState","currency","setCurrency","status","setStatus","t","useTranslation","pathname","useLocation","useEffect","data","Date","currentDate","getTime","isSaveLocal","JSON","parse","localStorage","getItem","date","arrMainCurrency","result","axios","exchangeRate","currencyBack","push","filter","cur","undefined","DateToLocal","reverse","setItem","stringify","console","log","toast","FetchCurrency","queries","table","minWidth","matches","to","mobile","uuidv4","length","map","purchaseRateNB","saleRateNB","Number","toFixed","Loader","color","size","tablet"],"sourceRoot":""}