{"version":3,"file":"static/js/DiagramTab.4aa9cf52.chunk.js","mappings":"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","sources":["components/DiagramTab/NewSelectButton/CustomSelect.styled.jsx","stylesheet/IconSVG.jsx","components/DiagramTab/NewSelectButton/CustomSelect.jsx","components/DiagramTab/DiagramTab.styled.jsx","components/Navigation/helpers/colorizedCategory.js","components/DiagramTab/DiagramTab.jsx","components/DiagramTab/index.js"],"sourcesContent":["import styled from \"styled-components\";\nimport '../../../stylesheet/fonts.css';\n\n\nexport const SelectWrapper = styled.div`\n    margin-bottom: 20px;\n    position: relative;\n\n    //border: 1px solid red;\n\n    &:hover {\n        fill: var(--active-blue);\n    }\n\n    \n\n`;\nexport const SelectBtn = styled.button`\n    width: 100%;\n    height: 100%;\n    border: 1px solid var(--black);\n    border-radius: 30px;\n    padding: 12px 21px 14px 20px;\n\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-family: var(--baseFont);\n    font-style: normal;\n    font-weight: var(--regular);\n    font-size: 16px;\n    line-height: 1.47;\n    background: none;\n    cursor: pointer;\n    outline: none;\n\n    & svg {\n        &.rotated-svg {\n            transform: rotateX(180deg);\n        }\n  \n    }\n`;\n\nexport const SelectOptionsList = styled.ul`\n    width: 100%;\n    position: absolute;\n    top: 60px;\n    left: 0;\n    z-index: 1;\n    background-color: #f1f2f7;\n\n    box-shadow: 0px 6px 15px rgba(0, 0, 0, 0.1);\n    border-radius: 20px;\n    \n`;\nexport const SelectOptionsItem = styled.li`\n    text-align: start;\n    font-family: var(--baseFont);\n    font-style: normal;\n    font-weight: var(--regular);\n    font-size: 16px;\n    line-height: 1.47;\n    cursor: pointer;\n    padding: 5px 21px 5px 20px;\n    border-radius: 10px;\n\n    &:hover {\n        background-color: var(--background-gray);\n    }\n\n`;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const IconSVG = ({id, className}) => {\n    switch(id) {\n        case 'icon-diagram-tab-arrow-down':\n        return (\n            <svg id=\"icon-diagram-tab-arrow-down\" className={className} viewBox=\"0 0 58 32\" width=\"18\" height=\"9\">\n                <path d=\"M3.938 1.881l-2.057 2.057 27.21 27.21 27.21-27.21-2.057-2.057-25.153 25.153z\"></path>\n            </svg>\n        )\n        default:\n        return <svg></svg>\n    }\n}\n\nIconSVG.propTypes = {\n    id: PropTypes.string.isRequired,\n}","import {\n  SelectWrapper,\n  SelectBtn,\n  SelectOptionsList,\n  SelectOptionsItem,\n} from './CustomSelect.styled';\nimport { useState, useEffect, useRef } from 'react';\nimport { IconSVG } from 'stylesheet/IconSVG';\nimport { useTranslation } from 'react-i18next';\n\nexport const CustomSelect = ({ items, changeValue }) => {\n  const [selectedText, setSelectedTex] = useState(items.tittle);\n  const [openStatus, setOpenStatus] = useState(false);\n  const refToggleDropDown = useRef(null);\n  const { t } = useTranslation();\n  function onSelectClick() {\n    setOpenStatus(!openStatus);\n  }\n\n  function onSelectChange(event) {\n    if (event.target.nodeName !== 'LI') {\n      return;\n    }\n\n    const itemName = event.target.id;\n    const itemValue = event.target.dataset.itemvalue;\n\n    setSelectedTex(itemName);\n    changeValue(itemValue);\n    setOpenStatus(!openStatus);\n  }\n  function handleOutsideDropDown(event) {\n    if (openStatus === true) {\n      if (refToggleDropDown.current) {\n        if (!refToggleDropDown.current.contains(event.target)) {\n          setOpenStatus(false);\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('click', handleOutsideDropDown);\n    return () => {\n      window.removeEventListener('click', handleOutsideDropDown);\n    };\n  });\n  return (\n    <SelectWrapper className=\"select__wrapper\">\n      <SelectBtn\n        className=\"select__button\"\n        ref={refToggleDropDown}\n        onClick={onSelectClick}\n        status={openStatus}\n      >\n        <span className=\"select__button__active-text\">\n          {t(`diagramTab.optionData.${selectedText}`)}\n        </span>\n        {openStatus === false && <IconSVG id=\"icon-diagram-tab-arrow-down\" />}\n        {openStatus === true && (\n          <IconSVG id=\"icon-diagram-tab-arrow-down\" className=\"rotated-svg\" />\n        )}\n      </SelectBtn>\n\n      {openStatus === true && (\n        <SelectOptionsList\n          className=\"select__options-wrapper options\"\n          onClick={event => {\n            onSelectChange(event);\n          }}\n        >\n          {items &&\n            items.data.map(({ text, value, id }) => {\n              return (\n                <SelectOptionsItem\n                  key={text}\n                  id={id}\n                  className=\"options__item\"\n                  data-itemvalue={value}\n                >\n                  {t(`diagramTab.optionData.${id}`)}\n                </SelectOptionsItem>\n              );\n            })}\n        </SelectOptionsList>\n      )}\n    </SelectWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport '../../stylesheet/fonts.css';\n\nexport const DiagramTabWrapper = styled.div`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n`;\nexport const DiagramButtonsWrapper = styled.div``;\n\nexport const DiagramTableBar = styled.div`\n  @media screen and (min-width: 320px) {\n    width: 280px;\n    margin-top: 0;\n  }\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    //margin-top: 11px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    margin-top: 56px;\n  }\n`;\n\nexport const StatisticsContainer = styled.div`\n  @media screen and (min-width: 768px) {\n    display: flex;\n  }\n`;","export const colorizedCategory = category => {\n  const categoryColorsData = [\n    {\n      categoryColor: '#B5B88F',\n      categoryName: 'main',\n    },\n    {\n      categoryColor: '#FF7A7A',\n      categoryName: 'house',\n    },\n    {\n      categoryColor: '#FFF1CB',\n      categoryName: 'children',\n    },\n    {\n      categoryColor: '#F0F1AB',\n      categoryName: 'development',\n    },\n    {\n      categoryColor: '#75D7B4',\n      categoryName: 'food',\n    },\n    {\n      categoryColor: '#FED057',\n      categoryName: 'basic',\n    },\n    {\n      categoryColor: '#FFD8D0',\n      categoryName: 'products',\n    },\n    {\n      categoryColor: '#FD9498',\n      categoryName: 'car',\n    },\n    {\n      categoryColor: '#C5BAFF',\n      categoryName: 'health',\n    },\n    {\n      categoryColor: '#6E78E8',\n      categoryName: 'childrencare',\n    },\n    {\n      categoryColor: '#4A56E2',\n      categoryName: 'household',\n    },\n    {\n      categoryColor: '#81E1FF',\n      categoryName: 'education',\n    },\n    {\n      categoryColor: '#24CCA7',\n      categoryName: 'leisure',\n    },\n    {\n      categoryColor: '#00AD84',\n      categoryName: 'other',\n    },\n  ];\n  const findedItem = categoryColorsData.find(\n    item => item.categoryName === category\n  );\n  const randomColor = '#' + Math.floor(Math.random() * 16777215).toString(16);\n  return findedItem !== undefined ? findedItem.categoryColor : randomColor;\n};\n","import { lazy, useState, useEffect } from 'react';\nimport { useGetAllCategoriesQuery } from '../../redux/categoriesOperation';\nimport { useTranslation } from 'react-i18next';\n\nimport { CustomSelect } from 'components/DiagramTab/NewSelectButton/CustomSelect';\nimport {\n  DiagramTabWrapper,\n  DiagramTableBar,\n  DiagramButtonsWrapper,\n  StatisticsContainer,\n} from './DiagramTab.styled';\nimport { colorizedCategory } from 'components/Navigation/helpers/colorizedCategory';\n\nconst Table = lazy(() => import('../Table' /* webpackChunkName: \"Table\" */));\nconst Chart = lazy(() => import('../Chart' /* webpackChunkName: \"Chart\" */));\n\nexport const DiagramTab = () => {\n  const { data: reduxData } = useGetAllCategoriesQuery();\n\n  const { t } = useTranslation();\n  const [tableCategories, setTableCategories] = useState('');\n  const [tableIncomeSum, setTableIncomeSum] = useState(0);\n  const [tableExpenseSum, setTableExpenseSum] = useState(0);\n\n  const [monthSelectedValue, setMonthSelectedValue] = useState(null);\n  const [yearSelectedValue, setYearSelectedValue] = useState(null);\n\n  const monthDataSet = {\n    tittle: 'month',\n    data: [\n      { text: t('diagramTab.optionData.jan'), value: 1, id: 'jan' },\n      { text: t('diagramTab.optionData.feb'), value: 2, id: 'feb' },\n      { text: t('diagramTab.optionData.mar'), value: 3, id: 'mar' },\n      { text: t('diagramTab.optionData.apr'), value: 4, id: 'apr' },\n      { text: t('diagramTab.optionData.may'), value: 5, id: 'may' },\n      { text: t('diagramTab.optionData.jun'), value: 6, id: 'jun' },\n      { text: t('diagramTab.optionData.jul'), value: 7, id: 'jul' },\n      { text: t('diagramTab.optionData.aug'), value: 8, id: 'aug' },\n      { text: t('diagramTab.optionData.sep'), value: 9, id: 'sep' },\n      { text: t('diagramTab.optionData.oct'), value: 10, id: 'oct' },\n      { text: t('diagramTab.optionData.nov'), value: 11, id: 'nov' },\n      { text: t('diagramTab.optionData.dec'), value: 12, id: 'dec' },\n    ],\n  };\n\n  const yearDataSet = {\n    tittle: 'year',\n    data: [\n      { text: '2019', value: 2019, id: '19' },\n      { text: '2020', value: 2020, id: '20' },\n      { text: '2021', value: 2021, id: '21' },\n      { text: '2022', value: 2022, id: '22' },\n    ],\n  };\n  function incomeExpenseFilter(type, data) {\n    switch (type) {\n      case 'income':\n        return data.filter(item => item && item._id.type === 'income');\n\n      case 'expense':\n        return data.filter(item => item && item._id.type === 'expense');\n\n      default:\n        console.log('incorrect type of operation');\n    }\n  }\n  function onDateFilter(date, data) {\n    const { month, year } = date;\n\n    if (month === null && year === null) {\n      const result = data;\n      return result;\n    }\n\n    if (month !== null && year === null) {\n      const result = data.filter(item => item._id.month === Number(month));\n      return result;\n    }\n\n    if (month === null && year !== null) {\n      const result = data.filter(item => item._id.year === Number(year));\n      return result;\n    }\n\n    if (month !== null && year !== null) {\n      const result = data.filter(\n        item =>\n          item._id.month === Number(month) && item._id.year === Number(year)\n      );\n      return result;\n    }\n\n    console.log('incorrect arguments');\n  }\n\n  useEffect(() => {\n    function sumTheSameCategories(data) {\n      let sumaryData = [];\n\n      for (let item of data) {\n        if (sumaryData.length === 0) {\n          sumaryData = [\n            {\n              categoryName: item.category,\n              categorySum: item.sum,\n              categoryColor: colorizedCategory(item.category),\n            },\n          ];\n        } else {\n          const exisingItemOnsumaryData = sumaryData.find(\n            element => element.categoryName === item.category\n          );\n\n          if (exisingItemOnsumaryData !== undefined) {\n            exisingItemOnsumaryData.categorySum += item.sum;\n          } else {\n            sumaryData = [\n              ...sumaryData,\n              {\n                categoryName: item.category,\n                categorySum: item.sum,\n                categoryColor: colorizedCategory(item.category),\n              },\n            ];\n          }\n        }\n      }\n\n      return sumaryData;\n    }\n\n    if (reduxData === undefined) {\n      return;\n    }\n    if (tableCategories !== '') {\n      return;\n    }\n\n    const expenseCategiries = incomeExpenseFilter('expense', reduxData);\n    const incomeCategiries = incomeExpenseFilter('income', reduxData);\n\n    const expenseCategiriesTotalSum = expenseCategiries.reduce(\n      (total, item) => (total += item.totalPrice),\n      0\n    );\n    const incomeCategiriesTotalSum = incomeCategiries.reduce(\n      (total, item) => (total += item.totalPrice),\n      0\n    );\n\n    const allCategoriesInOne = expenseCategiries.reduce(\n      (result, item) => (result = [...result, ...item.category]),\n      []\n    );\n    const sumaryCategories = sumTheSameCategories(allCategoriesInOne);\n\n    setTableCategories(sumaryCategories);\n    setTableExpenseSum(expenseCategiriesTotalSum);\n    setTableIncomeSum(incomeCategiriesTotalSum);\n  }, [reduxData, t, tableCategories]);\n\n  useEffect(() => {\n    function sumTheSameCategories(data) {\n      let sumaryData = [];\n\n      for (let item of data) {\n        if (sumaryData.length === 0) {\n          sumaryData = [\n            {\n              categoryName: item.category,\n              categorySum: item.sum,\n              categoryColor: colorizedCategory(item.category),\n            },\n          ];\n        } else {\n          const exisingItemOnsumaryData = sumaryData.find(\n            element => element.categoryName === item.category\n          );\n\n          if (exisingItemOnsumaryData !== undefined) {\n            exisingItemOnsumaryData.categorySum += item.sum;\n          } else {\n            sumaryData = [\n              ...sumaryData,\n              {\n                categoryName: item.category,\n                categorySum: item.sum,\n                categoryColor: colorizedCategory(item.category),\n              },\n            ];\n          }\n        }\n      }\n\n      return sumaryData;\n    }\n\n    if (monthSelectedValue === null && yearSelectedValue === null) {\n      return;\n    }\n\n    const onDateFilteredData = onDateFilter(\n      { month: monthSelectedValue, year: yearSelectedValue },\n      reduxData\n    );\n\n    const expenseCategiries = incomeExpenseFilter(\n      'expense',\n      onDateFilteredData\n    );\n    const incomeCategiries = incomeExpenseFilter('income', onDateFilteredData);\n\n    const expenseCategiriesTotalSum = expenseCategiries.reduce(\n      (total, item) => (total += item.totalPrice),\n      0\n    );\n    const incomeCategiriesTotalSum = incomeCategiries.reduce(\n      (total, item) => (total += item.totalPrice),\n      0\n    );\n\n    const allCategoriesInOne = expenseCategiries.reduce(\n      (result, item) => (result = [...result, ...item.category]),\n      []\n    );\n    const sumaryCategories = sumTheSameCategories(allCategoriesInOne);\n\n    setTableCategories(sumaryCategories);\n    setTableExpenseSum(expenseCategiriesTotalSum);\n    setTableIncomeSum(incomeCategiriesTotalSum);\n  }, [monthSelectedValue, reduxData, t, yearSelectedValue]);\n\n  return (\n    <StatisticsContainer>\n      <Chart\n        tableCategories={tableCategories}\n        tableExpenseSum={tableExpenseSum}\n      />\n      <DiagramTabWrapper className=\"diagram-tab__wrapper\">\n        <DiagramTableBar className=\"diagram-tab__table-bar\">\n          <DiagramButtonsWrapper className=\"diagram-tab__buttons-wrapper\">\n            <CustomSelect\n              items={yearDataSet}\n              changeValue={setYearSelectedValue}\n            />\n            <CustomSelect\n              items={monthDataSet}\n              changeValue={setMonthSelectedValue}\n            />\n          </DiagramButtonsWrapper>\n\n          <Table\n            tableCategories={tableCategories}\n            tableIncomeSum={tableIncomeSum}\n            tableExpenseSum={tableExpenseSum}\n          />\n        </DiagramTableBar>\n      </DiagramTabWrapper>\n    </StatisticsContainer>\n  );\n};\n","import { DiagramTab } from './DiagramTab';\n\nexport default DiagramTab;\n"],"names":["SelectWrapper","styled","SelectBtn","SelectOptionsList","SelectOptionsItem","IconSVG","id","className","viewBox","width","height","d","CustomSelect","items","changeValue","useState","tittle","selectedText","setSelectedTex","openStatus","setOpenStatus","refToggleDropDown","useRef","t","useTranslation","handleOutsideDropDown","event","current","contains","target","useEffect","window","addEventListener","removeEventListener","ref","onClick","status","nodeName","itemName","itemValue","dataset","itemvalue","onSelectChange","data","map","text","value","DiagramTabWrapper","DiagramButtonsWrapper","DiagramTableBar","StatisticsContainer","colorizedCategory","category","findedItem","categoryColor","categoryName","find","item","randomColor","Math","floor","random","toString","undefined","Table","lazy","Chart","reduxData","useGetAllCategoriesQuery","tableCategories","setTableCategories","tableIncomeSum","setTableIncomeSum","tableExpenseSum","setTableExpenseSum","monthSelectedValue","setMonthSelectedValue","yearSelectedValue","setYearSelectedValue","monthDataSet","incomeExpenseFilter","type","filter","_id","console","log","expenseCategiries","incomeCategiries","expenseCategiriesTotalSum","reduce","total","totalPrice","incomeCategiriesTotalSum","sumaryCategories","sumaryData","length","categorySum","sum","exisingItemOnsumaryData","element","sumTheSameCategories","result","onDateFilteredData","date","month","year","Number","onDateFilter"],"sourceRoot":""}