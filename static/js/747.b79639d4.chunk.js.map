{"version":3,"file":"static/js/747.b79639d4.chunk.js","mappings":"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","sources":["../node_modules/object-assign/index.js","../node_modules/react-ellipsis-text/index.js","../node_modules/react-ellipsis-text/lib/components/EllipsisText.js","../node_modules/react-ellipsis-text/node_modules/react/cjs/react.production.min.js","../node_modules/react-ellipsis-text/node_modules/react/index.js","../node_modules/react-table/src/publicUtils.js","../node_modules/react-table/src/utils.js","../node_modules/react-table/src/makeDefaultPluginHooks.js","../node_modules/react-table/src/hooks/useColumnVisibility.js","../node_modules/react-table/src/hooks/useTable.js","../node_modules/react-table/src/plugin-hooks/useExpanded.js","../node_modules/react-table/src/filterTypes.js","../node_modules/react-table/src/plugin-hooks/useFilters.js","../node_modules/react-table/src/plugin-hooks/useGlobalFilter.js","../node_modules/react-table/src/aggregations.js","../node_modules/react-table/src/plugin-hooks/useGroupBy.js","../node_modules/react-table/src/sortTypes.js","../node_modules/react-table/src/plugin-hooks/useSortBy.js","../node_modules/react-table/src/plugin-hooks/usePagination.js","../node_modules/react-table/src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../node_modules/react-table/src/plugin-hooks/useRowSelect.js","../node_modules/react-table/src/plugin-hooks/useRowState.js","../node_modules/react-table/src/plugin-hooks/useColumnOrder.js","../node_modules/react-table/src/plugin-hooks/useResizeColumns.js","../node_modules/react-table/src/plugin-hooks/useAbsoluteLayout.js","../node_modules/react-table/src/plugin-hooks/useBlockLayout.js","../node_modules/react-table/src/plugin-hooks/useFlexLayout.js","../node_modules/react-table/src/plugin-hooks/useGridLayout.js","../node_modules/react-table/index.js"],"sourcesContent":["/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","module.exports = require('./lib/components/EllipsisText');\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar styles = {\n  allText: {\n    MozUserSelect: 'text',\n    WebkitUserSelect: 'text',\n    msUserSelect: 'text',\n    userSelect: 'text'\n  }\n};\n\nvar EllipsisText =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EllipsisText, _React$Component);\n\n  function EllipsisText(props) {\n    var _this;\n\n    _classCallCheck(this, EllipsisText);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EllipsisText).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(EllipsisText, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          text = _this$props.text,\n          length = _this$props.length,\n          tail = _this$props.tail,\n          tailClassName = _this$props.tailClassName,\n          others = _objectWithoutProperties(_this$props, [\"text\", \"length\", \"tail\", \"tailClassName\"]);\n\n      if (text.length <= this.props.length || this.props.length < 0) {\n        return _react[\"default\"].createElement(\"span\", others, this.props.text);\n      } else {\n        var tailStyle = {\n          cursor: 'auto'\n        };\n        var displayText;\n\n        if (length - tail.length <= 0) {\n          displayText = '';\n        } else {\n          displayText = text.slice(0, length - tail.length);\n        }\n\n        return _react[\"default\"].createElement(\"span\", _extends({\n          title: this.props.text\n        }, others), displayText, _react[\"default\"].createElement(\"span\", {\n          style: tailStyle,\n          className: tailClassName\n        }, tail));\n      }\n    }\n  }]);\n\n  return EllipsisText;\n}(_react[\"default\"].Component);\n\nEllipsisText.propTypes = {\n  text: _propTypes[\"default\"].string.isRequired,\n  length: _propTypes[\"default\"].number.isRequired,\n  tail: _propTypes[\"default\"].string,\n  tailClassName: _propTypes[\"default\"].string\n};\nEllipsisText.defaultProps = {\n  tail: '...',\n  tailClassName: 'more'\n};\nvar _default = EllipsisText;\nexports[\"default\"] = _default;","/** @license React v16.14.0\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var l=require(\"object-assign\"),n=\"function\"===typeof Symbol&&Symbol.for,p=n?Symbol.for(\"react.element\"):60103,q=n?Symbol.for(\"react.portal\"):60106,r=n?Symbol.for(\"react.fragment\"):60107,t=n?Symbol.for(\"react.strict_mode\"):60108,u=n?Symbol.for(\"react.profiler\"):60114,v=n?Symbol.for(\"react.provider\"):60109,w=n?Symbol.for(\"react.context\"):60110,x=n?Symbol.for(\"react.forward_ref\"):60112,y=n?Symbol.for(\"react.suspense\"):60113,z=n?Symbol.for(\"react.memo\"):60115,A=n?Symbol.for(\"react.lazy\"):\n60116,B=\"function\"===typeof Symbol&&Symbol.iterator;function C(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}\nvar D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},E={};function F(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}F.prototype.isReactComponent={};F.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(C(85));this.updater.enqueueSetState(this,a,b,\"setState\")};F.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction G(){}G.prototype=F.prototype;function H(a,b,c){this.props=a;this.context=b;this.refs=E;this.updater=c||D}var I=H.prototype=new G;I.constructor=H;l(I,F.prototype);I.isPureReactComponent=!0;var J={current:null},K=Object.prototype.hasOwnProperty,L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,c){var e,d={},g=null,k=null;if(null!=b)for(e in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)K.call(b,e)&&!L.hasOwnProperty(e)&&(d[e]=b[e]);var f=arguments.length-2;if(1===f)d.children=c;else if(1<f){for(var h=Array(f),m=0;m<f;m++)h[m]=arguments[m+2];d.children=h}if(a&&a.defaultProps)for(e in f=a.defaultProps,f)void 0===d[e]&&(d[e]=f[e]);return{$$typeof:p,type:a,key:g,ref:k,props:d,_owner:J.current}}\nfunction N(a,b){return{$$typeof:p,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===p}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g,Q=[];function R(a,b,c,e){if(Q.length){var d=Q.pop();d.result=a;d.keyPrefix=b;d.func=c;d.context=e;d.count=0;return d}return{result:a,keyPrefix:b,func:c,context:e,count:0}}\nfunction S(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>Q.length&&Q.push(a)}\nfunction T(a,b,c,e){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case p:case q:g=!0}}if(g)return c(e,a,\"\"===b?\".\"+U(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+U(d,k);g+=T(d,f,c,e)}else if(null===a||\"object\"!==typeof a?f=null:(f=B&&a[B]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=f.call(a),k=\n0;!(d=a.next()).done;)d=d.value,f=b+U(d,k++),g+=T(d,f,c,e);else if(\"object\"===d)throw c=\"\"+a,Error(C(31,\"[object Object]\"===c?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":c,\"\"));return g}function V(a,b,c){return null==a?0:T(a,\"\",b,c)}function U(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function W(a,b){a.func.call(a.context,b,a.count++)}\nfunction aa(a,b,c){var e=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?X(a,e,c,function(a){return a}):null!=a&&(O(a)&&(a=N(a,d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(P,\"$&/\")+\"/\")+c)),e.push(a))}function X(a,b,c,e,d){var g=\"\";null!=c&&(g=(\"\"+c).replace(P,\"$&/\")+\"/\");b=R(b,g,e,d);V(a,aa,b);S(b)}var Y={current:null};function Z(){var a=Y.current;if(null===a)throw Error(C(321));return a}\nvar ba={ReactCurrentDispatcher:Y,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:J,IsSomeRendererActing:{current:!1},assign:l};exports.Children={map:function(a,b,c){if(null==a)return a;var e=[];X(a,e,null,b,c);return e},forEach:function(a,b,c){if(null==a)return a;b=R(null,null,b,c);V(a,W,b);S(b)},count:function(a){return V(a,function(){return null},null)},toArray:function(a){var b=[];X(a,b,null,function(a){return a});return b},only:function(a){if(!O(a))throw Error(C(143));return a}};\nexports.Component=F;exports.Fragment=r;exports.Profiler=u;exports.PureComponent=H;exports.StrictMode=t;exports.Suspense=y;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ba;\nexports.cloneElement=function(a,b,c){if(null===a||void 0===a)throw Error(C(267,a));var e=l({},a.props),d=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=J.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)K.call(b,h)&&!L.hasOwnProperty(h)&&(e[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)e.children=c;else if(1<h){f=Array(h);for(var m=0;m<h;m++)f[m]=arguments[m+2];e.children=f}return{$$typeof:p,type:a.type,\nkey:d,ref:g,props:e,_owner:k}};exports.createContext=function(a,b){void 0===b&&(b=null);a={$$typeof:w,_calculateChangedBits:b,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null};a.Provider={$$typeof:v,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};exports.forwardRef=function(a){return{$$typeof:x,render:a}};exports.isValidElement=O;\nexports.lazy=function(a){return{$$typeof:A,_ctor:a,_status:-1,_result:null}};exports.memo=function(a,b){return{$$typeof:z,type:a,compare:void 0===b?null:b}};exports.useCallback=function(a,b){return Z().useCallback(a,b)};exports.useContext=function(a,b){return Z().useContext(a,b)};exports.useDebugValue=function(){};exports.useEffect=function(a,b){return Z().useEffect(a,b)};exports.useImperativeHandle=function(a,b,c){return Z().useImperativeHandle(a,b,c)};\nexports.useLayoutEffect=function(a,b){return Z().useLayoutEffect(a,b)};exports.useMemo=function(a,b){return Z().useMemo(a,b)};exports.useReducer=function(a,b,c){return Z().useReducer(a,b,c)};exports.useRef=function(a){return Z().useRef(a)};exports.useState=function(a){return Z().useState(a)};exports.version=\"16.14.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { rowsById } = instance\n\n    const isAllRowsExpanded =\n      Object.keys(rowsById).length === Object.keys(state.expanded).length\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows.map((row) => ({ ...row, depth }))\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (row) {\n        if (!row.isGrouped) {\n          if (shouldExist) {\n            newSelectedRowIds[id] = true\n          } else {\n            delete newSelectedRowIds[id]\n          }\n        }\n\n        if (selectSubRows && getSubRows(row)) {\n          return getSubRows(row).forEach(row => handleRowById(row.id))\n        }\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    let raf\n    let mostRecentClientX\n\n    const dispatchEnd = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnDoneResizing })\n    }\n    const dispatchMove = () => {\n      window.cancelAnimationFrame(raf)\n      raf = null\n      dispatch({ type: actions.columnResizing, clientX: mostRecentClientX })\n    }\n\n    const scheduleDispatchMoveOnNextAnimationFrame = clientXPos => {\n      mostRecentClientX = clientXPos\n      if (!raf) {\n        raf = window.requestAnimationFrame(dispatchMove)\n      }\n    }\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => scheduleDispatchMoveOnNextAnimationFrame(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          scheduleDispatchMoveOnNextAnimationFrame(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","import { actions } from '../publicUtils'\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getRowProps.push(getRowProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => {\n  const gridTemplateColumns = instance.visibleColumns.map(column => {\n    if (instance.state.gridLayout.columnWidths[column.id])\n      return `${instance.state.gridLayout.columnWidths[column.id]}px`\n    // When resizing, lock the width of all unset columns\n    // instead of using user-provided width or defaultColumn width,\n    // which could potentially be 'auto' or 'fr' units that don't scale linearly\n    if (instance.state.columnResizing?.isResizingColumn)\n      return `${instance.state.gridLayout.startWidths[column.id]}px`\n    if (typeof column.width === 'number') return `${column.width}px`\n    return column.width\n  })\n  return [\n    props,\n    {\n      style: {\n        display: `grid`,\n        gridTemplateColumns: gridTemplateColumns.join(` `),\n      },\n    },\n  ]\n}\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky`, //enables a scroll wrapper to be placed around the table and have sticky headers\n      gridColumn: `span ${column.totalVisibleHeaderCount}`,\n    },\n  },\n]\n\nconst getRowProps = (props, { row }) => {\n  if (row.isExpanded) {\n    return [\n      props,\n      {\n        style: {\n          gridColumn: `1 / ${row.cells.length + 1}`,\n        },\n      },\n    ]\n  }\n  return [props, {}]\n}\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      gridLayout: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      gridLayout: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { columnId, headerIdWidths } = action\n    const columnWidth = getElementWidth(columnId)\n\n    if (columnWidth !== undefined) {\n      const startWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: getElementWidth(column.id),\n        }),\n        {}\n      )\n      const minWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.minWidth,\n        }),\n        {}\n      )\n      const maxWidths = instance.visibleColumns.reduce(\n        (acc, column) => ({\n          ...acc,\n          [column.id]: column.maxWidth,\n        }),\n        {}\n      )\n\n      const headerIdGridWidths = headerIdWidths.map(([headerId]) => [\n        headerId,\n        getElementWidth(headerId),\n      ])\n\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          startWidths,\n          minWidths,\n          maxWidths,\n          headerIdGridWidths,\n          columnWidth,\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX } = state.columnResizing\n    const {\n      columnWidth,\n      minWidths,\n      maxWidths,\n      headerIdGridWidths = [],\n    } = state.gridLayout\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdGridWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.min(\n        Math.max(\n          minWidths[headerId],\n          headerWidth + headerWidth * percentageDeltaX\n        ),\n        maxWidths[headerId]\n      )\n    })\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: {\n          ...state.gridLayout.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        startWidths: {},\n        minWidths: {},\n        maxWidths: {},\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}\n","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n"],"names":["getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","undefined","TypeError","module","exports","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","s","arguments","length","key","call","_react","_interopRequireDefault","require","_propTypes","obj","__esModule","_typeof","Symbol","iterator","constructor","_extends","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","EllipsisText","_React$Component","_this","instance","Constructor","_classCallCheck","state","protoProps","staticProps","subClass","superClass","create","value","_inherits","displayText","_this$props","text","tail","tailClassName","others","createElement","slice","title","style","cursor","className","Component","propTypes","string","isRequired","number","defaultProps","_default","l","for","q","r","t","u","v","w","x","y","z","A","B","C","a","b","c","encodeURIComponent","D","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","E","F","context","refs","updater","G","H","isReactComponent","setState","Error","forceUpdate","I","isPureReactComponent","J","current","K","L","ref","__self","__source","M","e","d","g","k","f","children","h","Array","m","$$typeof","type","_owner","O","P","Q","R","pop","result","keyPrefix","func","count","S","push","T","U","isArray","next","done","V","replace","escape","toString","W","aa","X","N","Y","Z","ba","ReactCurrentDispatcher","ReactCurrentBatchConfig","suspense","ReactCurrentOwner","IsSomeRendererActing","Children","toArray","only","Fragment","Profiler","PureComponent","StrictMode","Suspense","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","cloneElement","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_ctor","_status","_result","memo","compare","useCallback","useContext","useDebugValue","useEffect","useImperativeHandle","useLayoutEffect","useMemo","useReducer","useRef","useState","version","actions","init","defaultRenderer","emptyRenderer","React","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","reduceHooks","initial","allowUndefined","loopHooks","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","old","useGetLatest","safeUseLayoutEffect","document","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","column","Comp","console","info","flexRender","component","proto","includes","description","linkColumnStructure","columns","parent","depth","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","row","path","def","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","reOpenBracket","reCloseBracket","set","pathPart","error","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","args","isFunction","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","hiddenColumns","onChange","toggleHidden","checked","isVisible","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","subHeader","handleColumn","parentVisible","subColumn","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","header","subHeaders","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","unique","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","nonGroupByColumns","isGrouped","groupedIndex","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","_row$subRows","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","isNaN","alphanumeric","rowA","rowB","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","uniqueValue","columnGroup","PivotHeader","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","_rowsById$_rowId","_rowsById$_rowId$cell","autoResetRowState","getAutoResetRowState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","raf","mostRecentClientX","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchEnd","window","cancelAnimationFrame","dispatchMove","scheduleDispatchMoveOnNextAnimationFrame","clientXPos","requestAnimationFrame","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","supported","options","addEventListener","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","_instance$state$colum","startWidths","gridColumn","getElementWidth","acc","minWidths","maxWidths","headerIdGridWidths","getElementById","_document$getElementB","offsetWidth","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","handler","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","footerGroups"],"sourceRoot":""}