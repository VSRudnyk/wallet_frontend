{"version":3,"file":"static/js/Table.6e915691.chunk.js","mappings":"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","sources":["components/Table/Table.styled.jsx","components/Table/index.js","components/Table/Table.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport '../../stylesheet/fonts.css';\n\nexport const TableWrapper = styled.div`\n    font-family: var(--baseFont);\n    font-style: normal;\n    font-weight: var(--regular);\n    margin: 0 auto;\n\n\n    & ul {\n        list-style: none;\n    }    \n`;\nexport const TableTittle = styled.div`\n    background-color: var(--white);\n    border-radius: 30px;\n    padding: 15px 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\nexport const TableTittleBtn = styled.button`\n    border: none;\n    background: none;\n    font-size: 18px;\n    line-height: 1.47;\n    font-weight: var(--bold);\n`;\n\nexport const TableContentList = styled.ul`\n    margin: 0;\n    padding: 0 20px;\n`;\nexport const TableContentItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 13px 0;\n    border-bottom: 1px solid var(--transaction-underline-color);\n    margin-bottom: 1px;\n    \n\n    & span {\n        display: block;\n    }\n`;\n\nexport const ItemCategoryWrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const CategoryColorMark = styled.span`\n    width: 24px;\n    height: 24px;\n    margin-right: 16px;\n    background-color:${props => props.background || \"var(--black)\"};\n`;\nexport const CategoryName = styled.span`\n\n`;\nexport const ItemSum = styled.span``;\n\nexport const TableResultList = styled.ul`\n    margin: 16px 0 0 0;\n    padding: 0 20px;\n    \n`;\nexport const TableResultItem = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    &:not(:last-child) {\n        margin-bottom: 14px;\n    }\n    & span {\n        display: block;\n    }\n`;\nexport const ResultItemTittle = styled.span`\n    font-weight: var(--bold);\n`;\nexport const ResultItemValue = styled.span`\n    color: ${props => props.color || \"var(--black)\"};\n`;","import { Table } from './Table';\n\nexport default Table;\n","import {\n  TableWrapper,\n  TableTittle,\n  TableTittleBtn,\n  TableContentList,\n  TableContentItem,\n  ItemCategoryWrapper,\n  CategoryColorMark,\n  CategoryName,\n  ItemSum,\n  TableResultList,\n  TableResultItem,\n  ResultItemTittle,\n  ResultItemValue,\n} from './Table.styled';\nimport { useState, useEffect } from 'react';\n\nexport const Table = ({ tableData }) => {\n  const [dataToRender, setDataToRender] = useState(null);\n\n  const [categorySortedStatus, setCategorySortedStatus] = useState('');\n  const [sumSortedStatus, setSumSortedStatus] = useState('');\n\n  useEffect(() => {\n    if (dataToRender === null) {\n      setDataToRender(\n        [...tableData].map(item => {\n          item.categorySum = Number.parseFloat(item.categorySum);\n          return item;\n        })\n      );\n    }\n  }, [dataToRender, tableData]);\n\n  function sortByCategory() {\n    if (categorySortedStatus === '' || categorySortedStatus === 'ZA') {\n      const sortedData = [...tableData].sort((firstCategory, secondCategory) =>\n        firstCategory.categoryName.localeCompare(secondCategory.categoryName)\n      );\n      setCategorySortedStatus('AZ');\n      setSumSortedStatus('');\n\n      setDataToRender(sortedData);\n    }\n    if (categorySortedStatus === 'AZ') {\n      const sortedData = [...tableData].sort((firstCategory, secondCategory) =>\n        secondCategory.categoryName.localeCompare(firstCategory.categoryName)\n      );\n      setCategorySortedStatus('ZA');\n      //setSumSortedStatus('');\n\n      setDataToRender(sortedData);\n    }\n  }\n\n  function sortHelper(method) {\n    const parsedData = tableData.map(item => {\n      item.categorySum = Number.parseFloat(item.categorySum);\n      return item;\n    });\n\n    switch (method) {\n      case 'ascending':\n        return [...parsedData].sort((a, b) => a.categorySum - b.categorySum);\n\n      case 'descending':\n        return [...parsedData].sort((a, b) => b.categorySum - a.categorySum);\n\n      default:\n        console.log('incorrect method');\n    }\n  }\n\n  function sortBySum() {\n    let sortedResult = null;\n\n    switch (sumSortedStatus) {\n      case '':\n        sortedResult = sortHelper('ascending');\n        setSumSortedStatus('increment');\n        setCategorySortedStatus('');\n        break;\n\n      case 'decrement':\n        sortedResult = sortHelper('ascending');\n        setSumSortedStatus('increment');\n        setCategorySortedStatus('');\n        break;\n\n      case 'increment':\n        sortedResult = sortHelper('descending');\n        setSumSortedStatus('decrement');\n        break;\n\n      default:\n        console.log('error');\n    }\n\n    setDataToRender(sortedResult);\n  }\n\n  function sumConverter(sum) {\n    const sumStr = sum.toFixed(2).toString();\n\n    if (sumStr.length > 6) {\n      const result = sumStr[0] + ' ' + sumStr.slice(1, sumStr.length);\n      return result;\n    }\n\n    return sumStr;\n  }\n\n  return (\n    <>\n      <TableWrapper className=\"table-wrapper\">\n        <TableTittle className=\"table-tittle\">\n          <TableTittleBtn className=\"table-tittle-btn\" onClick={sortByCategory}>\n            Category\n          </TableTittleBtn>\n          <TableTittleBtn className=\"table-tittle-btn\" onClick={sortBySum}>\n            Summ\n          </TableTittleBtn>\n        </TableTittle>\n\n        <TableContentList className=\"table-content-list\">\n          {dataToRender !== null &&\n            dataToRender.map(({ categoryColor, categoryName, categorySum }) => {\n              return (\n                <TableContentItem\n                  className=\"table-content-item\"\n                  key={categoryName}\n                >\n                  <ItemCategoryWrapper className=\"item-category-wrapper\">\n                    <CategoryColorMark\n                      background={categoryColor}\n                    ></CategoryColorMark>\n                    <CategoryName className=\"category-name\">\n                      {categoryName}\n                    </CategoryName>\n                  </ItemCategoryWrapper>\n                  <ItemSum>{sumConverter(categorySum)}</ItemSum>\n                </TableContentItem>\n              );\n            })}\n        </TableContentList>\n\n        <TableResultList className=\"table-result-list\">\n          <TableResultItem className=\"table-result-item\">\n            <ResultItemTittle className=\"result-item-tittle\">\n              Expenses:\n            </ResultItemTittle>\n            <ResultItemValue\n              className=\"result-item-value\"\n              color={'var(--pink)'}\n            >\n              22 549.24\n            </ResultItemValue>\n          </TableResultItem>\n\n          <TableResultItem className=\"table-result-item\">\n            <ResultItemTittle className=\"result-item-tittle\">\n              Income:\n            </ResultItemTittle>\n            <ResultItemValue\n              className=\"result-item-value\"\n              color={'var(--green)'}\n            >\n              27 350.00\n            </ResultItemValue>\n          </TableResultItem>\n        </TableResultList>\n      </TableWrapper>\n    </>\n  );\n};\n"],"names":["TableWrapper","styled","TableTittle","TableTittleBtn","TableContentList","TableContentItem","ItemCategoryWrapper","CategoryColorMark","props","background","CategoryName","ItemSum","TableResultList","TableResultItem","ResultItemTittle","ResultItemValue","color","tableData","useState","dataToRender","setDataToRender","categorySortedStatus","setCategorySortedStatus","sumSortedStatus","setSumSortedStatus","sortHelper","method","parsedData","map","item","categorySum","Number","parseFloat","sort","a","b","console","log","sumConverter","sum","sumStr","toFixed","toString","length","slice","useEffect","className","onClick","sortedData","firstCategory","secondCategory","categoryName","localeCompare","sortedResult","categoryColor"],"sourceRoot":""}