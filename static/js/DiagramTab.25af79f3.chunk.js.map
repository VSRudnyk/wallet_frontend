{"version":3,"file":"static/js/DiagramTab.25af79f3.chunk.js","mappings":"yNAGaA,G,QAAoBC,EAAAA,GAAAA,IAAH,+RAYjBC,EAAwBD,EAAAA,GAAAA,IAAH,sBACrBE,EAAgBF,EAAAA,GAAAA,IAAH,iSAgBbG,EAAsBH,EAAAA,GAAAA,OAAH,sYAoBnBI,EAAkBJ,EAAAA,GAAAA,IAAH,0S,SCjDfK,EAAU,SAAC,GACpB,MACS,gCAFoB,EAARC,IAIb,gBAAKA,GAAG,8BAA8BC,QAAQ,YAAYC,MAAM,KAAKC,OAAO,IAA5E,UACI,iBAAMC,EAAE,oFAIT,oBCDTC,GAAQC,EAAAA,EAAAA,OAAK,kBAAM,gCACnBC,GAAQD,EAAAA,EAAAA,OAAK,kBAAM,yDCVzB,EDY0B,WACxB,IAAQE,GAAMC,EAAAA,EAAAA,KAAND,EAiDR,OACE,UAACf,EAAD,CAAmBiB,UAAU,uBAA7B,WAEE,SAACH,EAAD,KAEA,UAACT,EAAD,CAAiBY,UAAU,yBAA3B,WACE,UAACf,EAAD,CAAuBe,UAAU,+BAAjC,WACE,UAACd,EAAD,CAAec,UAAU,cAAzB,WACE,UAACb,EAAD,CACEc,aAAa,QACbC,KAAK,QACLF,UAAU,4BAHZ,WAKE,mBAAQG,MAAM,QAAQC,UAAQ,EAACC,MAAO,CAAEC,QAAS,QAAjD,SACGR,EAAE,kCAEL,mBAAQK,MAAM,UAAd,SAAyBL,EAAE,gCAC3B,mBAAQK,MAAM,WAAd,SAA0BL,EAAE,gCAC5B,mBAAQK,MAAM,QAAd,SAAuBL,EAAE,gCACzB,mBAAQK,MAAM,QAAd,SAAuBL,EAAE,gCACzB,mBAAQK,MAAM,MAAd,SAAqBL,EAAE,gCACvB,mBAAQK,MAAM,OAAd,SAAsBL,EAAE,gCACxB,mBAAQK,MAAM,OAAd,SAAsBL,EAAE,gCACxB,mBAAQK,MAAM,SAAd,SAAwBL,EAAE,gCAC1B,mBAAQK,MAAM,YAAd,SACGL,EAAE,gCAEL,mBAAQK,MAAM,UAAd,SAAyBL,EAAE,gCAC3B,mBAAQK,MAAM,WAAd,SAA0BL,EAAE,gCAC5B,mBAAQK,MAAM,WAAd,SAA0BL,EAAE,mCAE9B,SAACT,EAAD,CAASC,GAAG,oCAGd,UAACJ,EAAD,CAAec,UAAU,cAAzB,WACE,UAACb,EAAD,CACEc,aAAa,OACbC,KAAK,OACLF,UAAU,2BAHZ,WAKE,mBAAQG,MAAM,OAAOC,UAAQ,EAACC,MAAO,CAAEC,QAAS,QAAhD,SACGR,EAAE,iCAEL,mBAAQK,MAAM,OAAd,mBACA,mBAAQA,MAAM,OAAd,mBACA,mBAAQA,MAAM,OAAd,mBACA,mBAAQA,MAAM,OAAd,sBAEF,SAACd,EAAD,CAASC,GAAG,uCAIhB,SAACK,EAAD,CAAOY,UApGK,CAChB,CACEC,cAAe,UACfC,aAAc,QACdC,YAAa,WAEf,CACEF,cAAe,UACfC,aAAc,WACdC,YAAa,WAEf,CACEF,cAAe,UACfC,aAAc,MACdC,YAAa,WAEf,CACEF,cAAe,UACfC,aAAc,SACdC,YAAa,UAEf,CACEF,cAAe,UACfC,aAAc,OACdC,YAAa,WAEf,CACEF,cAAe,UACfC,aAAc,OACdC,YAAa,UAEf,CACEF,cAAe,UACfC,aAAc,YACdC,YAAa,WAEf,CACEF,cAAe,UACfC,aAAc,UACdC,YAAa,WAEf,CACEF,cAAe,UACfC,aAAc,QACdC,YAAa","sources":["components/DiagramTab/DiagramTab.styled.jsx","stylesheet/IconSVG.jsx","components/DiagramTab/DiagramTab.jsx","components/DiagramTab/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport '../../stylesheet/fonts.css';\n\nexport const DiagramTabWrapper = styled.div`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n  }\n`;\nexport const DiagramButtonsWrapper = styled.div``;\nexport const DiagramButton = styled.div`\n  position: relative;\n\n  &:hover {\n    fill: var(--active-blue);\n  }\n  & svg {\n    position: absolute;\n    top: 50%;\n    right: 20px;\n    transform: translateY(-50%);\n    cursor: pointer;\n    transition: fill 500ms ease;\n    pointer-events: none;\n  }\n`;\nexport const DiagramCustomSelect = styled.select`\n  display: flex;\n\n  width: 100%;\n  padding: 12px 21px 14px 20px;\n  margin-bottom: 20px;\n  border: 1px solid var(--black);\n  border-radius: 30px;\n\n  font-family: var(--baseFont);\n  font-style: normal;\n  font-weight: var(--regular);\n  font-size: 16px;\n  line-height: 1.47;\n  background: none;\n  cursor: pointer;\n  outline: none;\n\n  appearance: none;\n`;\nexport const DiagramTableBar = styled.div`\n  //margin-top: 32px;\n\n  @media screen and (min-width: 320px) {\n    width: 280px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    //margin-top: 11px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 395px;\n    //margin-top: 56px;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const IconSVG = ({id}) => {\n    switch(id) {\n        case 'icon-diagram-tab-arrow-down':\n        return (\n            <svg id=\"icon-diagram-tab-arrow-down\" viewBox=\"0 0 58 32\" width=\"18\" height=\"9\">\n                <path d=\"M3.938 1.881l-2.057 2.057 27.21 27.21 27.21-27.21-2.057-2.057-25.153 25.153z\"></path>\n            </svg>\n        )\n        default:\n        return <svg></svg>\n    }\n}\n\nIconSVG.propTypes = {\n    id: PropTypes.string.isRequired,\n}","import { lazy } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport {\n  DiagramTabWrapper,\n  DiagramButton,\n  DiagramCustomSelect,\n  DiagramTableBar,\n  DiagramButtonsWrapper,\n} from './DiagramTab.styled';\nimport { IconSVG } from 'stylesheet/IconSVG';\nconst Table = lazy(() => import('../Table' /* webpackChunkName: \"Table\" */));\nconst Chart = lazy(() => import('../Chart' /* webpackChunkName: \"Chart\" */));\n\nexport const DiagramTab = () => {\n  const { t } = useTranslation();\n  const reduxData = [\n    {\n      categoryColor: '#FED057',\n      categoryName: 'Basic',\n      categorySum: '8700.00',\n    },\n    {\n      categoryColor: '#FFD8D0',\n      categoryName: 'Products',\n      categorySum: '3800.74',\n    },\n    {\n      categoryColor: '#FD9498',\n      categoryName: 'Car',\n      categorySum: '1500.00',\n    },\n    {\n      categoryColor: '#C5BAFF',\n      categoryName: 'Health',\n      categorySum: '800.00',\n    },\n    {\n      categoryColor: '#6E78E8',\n      categoryName: 'Kids',\n      categorySum: '2208.50',\n    },\n    {\n      categoryColor: '#4A56E2',\n      categoryName: 'Home',\n      categorySum: '300.00',\n    },\n    {\n      categoryColor: '#81E1FF',\n      categoryName: 'Education',\n      categorySum: '3400.00',\n    },\n    {\n      categoryColor: '#24CCA7',\n      categoryName: 'Leisure',\n      categorySum: '1230.00',\n    },\n    {\n      categoryColor: '#00AD84',\n      categoryName: 'Other',\n      categorySum: '610.00',\n    },\n  ];\n\n  return (\n    <DiagramTabWrapper className=\"diagram-tab__wrapper\">\n      {/* тут должен быть компонент \"Здоровенный разноцветный круг\" */}\n      <Chart />\n\n      <DiagramTableBar className=\"diagram-tab__table-bar\">\n        <DiagramButtonsWrapper className=\"diagram-tab__buttons-wrapper\">\n          <DiagramButton className=\"diagram-btn\">\n            <DiagramCustomSelect\n              defaultValue=\"Month\"\n              name=\"month\"\n              className=\"diagram-btn__select_month\"\n            >\n              <option value=\"Month\" disabled style={{ display: 'none' }}>\n                {t('diagramTab.optionData.month')}\n              </option>\n              <option value=\"January\">{t('diagramTab.optionData.jan')}</option>\n              <option value=\"February\">{t('diagramTab.optionData.feb')}</option>\n              <option value=\"March\">{t('diagramTab.optionData.mar')}</option>\n              <option value=\"April\">{t('diagramTab.optionData.apr')}</option>\n              <option value=\"May\">{t('diagramTab.optionData.may')}</option>\n              <option value=\"June\">{t('diagramTab.optionData.jun')}</option>\n              <option value=\"July\">{t('diagramTab.optionData.jul')}</option>\n              <option value=\"August\">{t('diagramTab.optionData.aug')}</option>\n              <option value=\"September\">\n                {t('diagramTab.optionData.sep')}\n              </option>\n              <option value=\"October\">{t('diagramTab.optionData.oct')}</option>\n              <option value=\"November\">{t('diagramTab.optionData.nov')}</option>\n              <option value=\"December\">{t('diagramTab.optionData.dec')}</option>\n            </DiagramCustomSelect>\n            <IconSVG id=\"icon-diagram-tab-arrow-down\" />\n          </DiagramButton>\n\n          <DiagramButton className=\"diagram-btn\">\n            <DiagramCustomSelect\n              defaultValue=\"Year\"\n              name=\"year\"\n              className=\"diagram-btn__select_year\"\n            >\n              <option value=\"Year\" disabled style={{ display: 'none' }}>\n                {t('diagramTab.optionData.year')}\n              </option>\n              <option value=\"2019\">2019</option>\n              <option value=\"2020\">2020</option>\n              <option value=\"2021\">2021</option>\n              <option value=\"2022\">2022</option>\n            </DiagramCustomSelect>\n            <IconSVG id=\"icon-diagram-tab-arrow-down\" />\n          </DiagramButton>\n        </DiagramButtonsWrapper>\n\n        <Table tableData={reduxData} />\n      </DiagramTableBar>\n    </DiagramTabWrapper>\n  );\n};\n","import { DiagramTab } from './DiagramTab';\n\nexport default DiagramTab;\n"],"names":["DiagramTabWrapper","styled","DiagramButtonsWrapper","DiagramButton","DiagramCustomSelect","DiagramTableBar","IconSVG","id","viewBox","width","height","d","Table","lazy","Chart","t","useTranslation","className","defaultValue","name","value","disabled","style","display","tableData","categoryColor","categoryName","categorySum"],"sourceRoot":""}